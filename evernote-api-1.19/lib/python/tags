!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACTIVE	.\evernote\edam\type\ttypes.py	/^  ACTIVE = 2$/;"	v	class:PremiumOrderStatus
ADMIN	.\evernote\edam\type\ttypes.py	/^  ADMIN = 9$/;"	v	class:PrivilegeLevel
ALREADY_OPEN	.\thrift\transport\TTransport.py	/^  ALREADY_OPEN = 2$/;"	v	class:TTransportException
AUTH_EXPIRED	.\evernote\edam\error\ttypes.py	/^  AUTH_EXPIRED = 9$/;"	v	class:EDAMErrorCode
Accounting	.\evernote\edam\type\ttypes.py	/^class Accounting(object):$/;"	c
Ad	.\evernote\edam\type\ttypes.py	/^class Ad(object):$/;"	c
AdImpressions	.\evernote\edam\notestore\ttypes.py	/^class AdImpressions(object):$/;"	c
AdParameters	.\evernote\edam\notestore\ttypes.py	/^class AdParameters(object):$/;"	c
Attribute	.\thrift\transport\TTwisted.py	/^from zope.interface import implements, Interface, Attribute$/;"	i
AuthenticationResult	.\evernote\edam\userstore\ttypes.py	/^class AuthenticationResult(object):$/;"	c
BAD_DATA_FORMAT	.\evernote\edam\error\ttypes.py	/^  BAD_DATA_FORMAT = 2$/;"	v	class:EDAMErrorCode
BAD_SEQUENCE_ID	.\thrift\Thrift.py	/^  BAD_SEQUENCE_ID = 4$/;"	v	class:TApplicationException
BAD_VERSION	.\thrift\protocol\TProtocol.py	/^  BAD_VERSION = 4$/;"	v	class:TProtocolException
BIG_ENDIAN	.\thrift\protocol\fastbinary.c	33;"	d	file:
BOOL	.\thrift\Thrift.py	/^  BOOL   = 2$/;"	v	class:TType
BYTE	.\thrift\Thrift.py	/^  BYTE   = 3$/;"	v	class:TType
BYTE_ORDER	.\thrift\protocol\fastbinary.c	41;"	d	file:
BaseHTTPServer	.\thrift\server\THttpServer.py	/^import BaseHTTPServer$/;"	i
Builder	.\thrift\TSCons.py	/^from SCons.Builder import Builder$/;"	i
CALL	.\thrift\Thrift.py	/^  CALL  = 1$/;"	v	class:TMessageType
CANCELED	.\evernote\edam\type\ttypes.py	/^  CANCELED = 5$/;"	v	class:PremiumOrderStatus
CANCELLATION_PENDING	.\evernote\edam\type\ttypes.py	/^  CANCELLATION_PENDING = 4$/;"	v	class:PremiumOrderStatus
CHECK_RANGE	.\thrift\protocol\fastbinary.c	110;"	d	file:
CLOSED	.\thrift\server\TNonblockingServer.py	/^CLOSED = 4$/;"	v
CREATED	.\evernote\edam\type\ttypes.py	/^  CREATED = 1$/;"	v	class:NoteSortOrder
CReadableTransport	.\thrift\transport\TTransport.py	/^class CReadableTransport:$/;"	c
Client	.\evernote\edam\notestore\NoteStore.py	/^class Client(Iface):$/;"	c
Client	.\evernote\edam\userstore\UserStore.py	/^class Client(Iface):$/;"	c
ClientFactory	.\thrift\transport\TTwisted.py	/^    connectionDone$/;"	i
Connection	.\thrift\server\TNonblockingServer.py	/^class Connection:$/;"	c
DATA_CONFLICT	.\evernote\edam\error\ttypes.py	/^  DATA_CONFLICT = 10$/;"	v	class:EDAMErrorCode
DATA_REQUIRED	.\evernote\edam\error\ttypes.py	/^  DATA_REQUIRED = 5$/;"	v	class:EDAMErrorCode
DEFAULT_BUFFER	.\thrift\transport\TTransport.py	/^  DEFAULT_BUFFER = 4096$/;"	v	class:TBufferedTransport
DOUBLE	.\thrift\Thrift.py	/^  DOUBLE = 4$/;"	v	class:TType
Data	.\evernote\edam\type\ttypes.py	/^class Data(object):$/;"	c
DecodeBuffer	.\thrift\protocol\fastbinary.c	/^} DecodeBuffer;$/;"	t	typeref:struct:__anon5	file:
EDAMErrorCode	.\evernote\edam\error\ttypes.py	/^class EDAMErrorCode(object):$/;"	c
EDAMNotFoundException	.\evernote\edam\error\ttypes.py	/^class EDAMNotFoundException(Exception):$/;"	c
EDAMSystemException	.\evernote\edam\error\ttypes.py	/^class EDAMSystemException(Exception):$/;"	c
EDAMUserException	.\evernote\edam\error\ttypes.py	/^class EDAMUserException(Exception):$/;"	c
EDAM_ATTRIBUTE_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_ATTRIBUTE_LEN_MAX = 4096$/;"	v
EDAM_ATTRIBUTE_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_ATTRIBUTE_LEN_MIN = 1$/;"	v
EDAM_ATTRIBUTE_LIST_MAX	.\evernote\edam\limits\constants.py	/^EDAM_ATTRIBUTE_LIST_MAX = 100$/;"	v
EDAM_ATTRIBUTE_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_ATTRIBUTE_REGEX = "^[^\\\\p{Cc}\\\\p{Zl}\\\\p{Zp}]{1,4096}$"$/;"	v
EDAM_COMMERCE_DEFAULT_CURRENCY_COUNTRY_CODE	.\evernote\edam\limits\constants.py	/^EDAM_COMMERCE_DEFAULT_CURRENCY_COUNTRY_CODE = "USD"$/;"	v
EDAM_COMMERCE_SERVICE_CYBERSOURCE	.\evernote\edam\limits\constants.py	/^EDAM_COMMERCE_SERVICE_CYBERSOURCE = "CYBERSRC"$/;"	v
EDAM_COMMERCE_SERVICE_GIFT	.\evernote\edam\limits\constants.py	/^EDAM_COMMERCE_SERVICE_GIFT = "Gift"$/;"	v
EDAM_COMMERCE_SERVICE_GOOGLE	.\evernote\edam\limits\constants.py	/^EDAM_COMMERCE_SERVICE_GOOGLE = "Google"$/;"	v
EDAM_COMMERCE_SERVICE_GROUP	.\evernote\edam\limits\constants.py	/^EDAM_COMMERCE_SERVICE_GROUP = "Group"$/;"	v
EDAM_COMMERCE_SERVICE_PAYPAL	.\evernote\edam\limits\constants.py	/^EDAM_COMMERCE_SERVICE_PAYPAL = "Paypal"$/;"	v
EDAM_COMMERCE_SERVICE_TRIAL	.\evernote\edam\limits\constants.py	/^EDAM_COMMERCE_SERVICE_TRIAL = "Trial"$/;"	v
EDAM_COMMERCE_SERVICE_TRIALPAY	.\evernote\edam\limits\constants.py	/^EDAM_COMMERCE_SERVICE_TRIALPAY = "TrialPay"$/;"	v
EDAM_EMAIL_DOMAIN_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_EMAIL_DOMAIN_REGEX = "^[A-Za-z0-9-]+(\\\\.[A-Za-z0-9-]+)*\\\\.([A-Za-z]{2,})$"$/;"	v
EDAM_EMAIL_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_EMAIL_LEN_MAX = 255$/;"	v
EDAM_EMAIL_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_EMAIL_LEN_MIN = 6$/;"	v
EDAM_EMAIL_LOCAL_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_EMAIL_LOCAL_REGEX = "^[A-Za-z0-9!#$%&'*+\/=?^_`{|}~-]+(\\\\.[A-Za-z0-9!#$%&'*+\/=?^_`{|}~-]+)*$"$/;"	v
EDAM_EMAIL_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_EMAIL_REGEX = "^[A-Za-z0-9!#$%&'*+\/=?^_`{|}~-]+(\\\\.[A-Za-z0-9!#$%&'*+\/=?^_`{|}~-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9-]+)*\\\\.([A-Za-z]{2,})$"$/;"	v
EDAM_GUID_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_GUID_LEN_MAX = 36$/;"	v
EDAM_GUID_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_GUID_LEN_MIN = 36$/;"	v
EDAM_GUID_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_GUID_REGEX = "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"$/;"	v
EDAM_HASH_LEN	.\evernote\edam\limits\constants.py	/^EDAM_HASH_LEN = 16$/;"	v
EDAM_MIME_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_MIME_LEN_MAX = 255$/;"	v
EDAM_MIME_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_MIME_LEN_MIN = 3$/;"	v
EDAM_MIME_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_MIME_REGEX = "^[A-Za-z]+\/[A-Za-z0-9._+-]+$"$/;"	v
EDAM_MIME_TYPES	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPES = set([$/;"	v
EDAM_MIME_TYPE_AMR	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPE_AMR = "audio\/amr"$/;"	v
EDAM_MIME_TYPE_DEFAULT	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPE_DEFAULT = "application\/octet-stream"$/;"	v
EDAM_MIME_TYPE_GIF	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPE_GIF = "image\/gif"$/;"	v
EDAM_MIME_TYPE_INK	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPE_INK = "application\/vnd.evernote.ink"$/;"	v
EDAM_MIME_TYPE_JPEG	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPE_JPEG = "image\/jpeg"$/;"	v
EDAM_MIME_TYPE_MP3	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPE_MP3 = "audio\/mpeg"$/;"	v
EDAM_MIME_TYPE_PDF	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPE_PDF = "application\/pdf"$/;"	v
EDAM_MIME_TYPE_PNG	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPE_PNG = "image\/png"$/;"	v
EDAM_MIME_TYPE_WAV	.\evernote\edam\limits\constants.py	/^EDAM_MIME_TYPE_WAV = "audio\/wav"$/;"	v
EDAM_NOTEBOOK_NAME_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_NOTEBOOK_NAME_LEN_MAX = 100$/;"	v
EDAM_NOTEBOOK_NAME_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_NOTEBOOK_NAME_LEN_MIN = 1$/;"	v
EDAM_NOTEBOOK_NAME_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_NOTEBOOK_NAME_REGEX = "^[^\\\\p{Cc}\\\\p{Z}]([^\\\\p{Cc}\\\\p{Zl}\\\\p{Zp}]{0,98}[^\\\\p{Cc}\\\\p{Z}])?$"$/;"	v
EDAM_NOTEBOOK_SHARED_NOTEBOOK_MAX	.\evernote\edam\limits\constants.py	/^EDAM_NOTEBOOK_SHARED_NOTEBOOK_MAX = 250$/;"	v
EDAM_NOTEBOOK_STACK_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_NOTEBOOK_STACK_LEN_MAX = 100$/;"	v
EDAM_NOTEBOOK_STACK_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_NOTEBOOK_STACK_LEN_MIN = 1$/;"	v
EDAM_NOTEBOOK_STACK_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_NOTEBOOK_STACK_REGEX = "^[^\\\\p{Cc}\\\\p{Z}]([^\\\\p{Cc}\\\\p{Zl}\\\\p{Zp}]{0,98}[^\\\\p{Cc}\\\\p{Z}])?$"$/;"	v
EDAM_NOTE_CONTENT_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_NOTE_CONTENT_LEN_MAX = 5242880$/;"	v
EDAM_NOTE_CONTENT_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_NOTE_CONTENT_LEN_MIN = 0$/;"	v
EDAM_NOTE_RESOURCES_MAX	.\evernote\edam\limits\constants.py	/^EDAM_NOTE_RESOURCES_MAX = 1000$/;"	v
EDAM_NOTE_SIZE_MAX_FREE	.\evernote\edam\limits\constants.py	/^EDAM_NOTE_SIZE_MAX_FREE = 26214400$/;"	v
EDAM_NOTE_SIZE_MAX_PREMIUM	.\evernote\edam\limits\constants.py	/^EDAM_NOTE_SIZE_MAX_PREMIUM = 52428800$/;"	v
EDAM_NOTE_SOURCE_MAIL_CLIP	.\evernote\edam\type\constants.py	/^EDAM_NOTE_SOURCE_MAIL_CLIP = "mail.clip"$/;"	v
EDAM_NOTE_SOURCE_MAIL_SMTP_GATEWAY	.\evernote\edam\type\constants.py	/^EDAM_NOTE_SOURCE_MAIL_SMTP_GATEWAY = "mail.smtp"$/;"	v
EDAM_NOTE_SOURCE_WEB_CLIP	.\evernote\edam\type\constants.py	/^EDAM_NOTE_SOURCE_WEB_CLIP = "web.clip"$/;"	v
EDAM_NOTE_TAGS_MAX	.\evernote\edam\limits\constants.py	/^EDAM_NOTE_TAGS_MAX = 100$/;"	v
EDAM_NOTE_TITLE_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_NOTE_TITLE_LEN_MAX = 255$/;"	v
EDAM_NOTE_TITLE_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_NOTE_TITLE_LEN_MIN = 1$/;"	v
EDAM_NOTE_TITLE_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_NOTE_TITLE_REGEX = "^[^\\\\p{Cc}\\\\p{Z}]([^\\\\p{Cc}\\\\p{Zl}\\\\p{Zp}]{0,253}[^\\\\p{Cc}\\\\p{Z}])?$"$/;"	v
EDAM_PUBLISHING_DESCRIPTION_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_PUBLISHING_DESCRIPTION_LEN_MAX = 200$/;"	v
EDAM_PUBLISHING_DESCRIPTION_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_PUBLISHING_DESCRIPTION_LEN_MIN = 1$/;"	v
EDAM_PUBLISHING_DESCRIPTION_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_PUBLISHING_DESCRIPTION_REGEX = "^[^\\\\p{Cc}\\\\p{Z}]([^\\\\p{Cc}\\\\p{Zl}\\\\p{Zp}]{0,198}[^\\\\p{Cc}\\\\p{Z}])?$"$/;"	v
EDAM_PUBLISHING_URI_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_PUBLISHING_URI_LEN_MAX = 255$/;"	v
EDAM_PUBLISHING_URI_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_PUBLISHING_URI_LEN_MIN = 1$/;"	v
EDAM_PUBLISHING_URI_PROHIBITED	.\evernote\edam\limits\constants.py	/^EDAM_PUBLISHING_URI_PROHIBITED = set([$/;"	v
EDAM_PUBLISHING_URI_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_PUBLISHING_URI_REGEX = "^[a-zA-Z0-9.~_+-]{1,255}$"$/;"	v
EDAM_RESOURCE_SIZE_MAX_FREE	.\evernote\edam\limits\constants.py	/^EDAM_RESOURCE_SIZE_MAX_FREE = 26214400$/;"	v
EDAM_RESOURCE_SIZE_MAX_PREMIUM	.\evernote\edam\limits\constants.py	/^EDAM_RESOURCE_SIZE_MAX_PREMIUM = 52428800$/;"	v
EDAM_SAVED_SEARCH_NAME_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_SAVED_SEARCH_NAME_LEN_MAX = 100$/;"	v
EDAM_SAVED_SEARCH_NAME_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_SAVED_SEARCH_NAME_LEN_MIN = 1$/;"	v
EDAM_SAVED_SEARCH_NAME_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_SAVED_SEARCH_NAME_REGEX = "^[^\\\\p{Cc}\\\\p{Z}]([^\\\\p{Cc}\\\\p{Zl}\\\\p{Zp}]{0,98}[^\\\\p{Cc}\\\\p{Z}])?$"$/;"	v
EDAM_SEARCH_QUERY_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_SEARCH_QUERY_LEN_MAX = 1024$/;"	v
EDAM_SEARCH_QUERY_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_SEARCH_QUERY_LEN_MIN = 0$/;"	v
EDAM_SEARCH_QUERY_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_SEARCH_QUERY_REGEX = "^[^\\\\p{Cc}\\\\p{Zl}\\\\p{Zp}]{0,1024}$"$/;"	v
EDAM_TAG_NAME_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_TAG_NAME_LEN_MAX = 100$/;"	v
EDAM_TAG_NAME_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_TAG_NAME_LEN_MIN = 1$/;"	v
EDAM_TAG_NAME_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_TAG_NAME_REGEX = "^[^,\\\\p{Cc}\\\\p{Z}]([^,\\\\p{Cc}\\\\p{Zl}\\\\p{Zp}]{0,98}[^,\\\\p{Cc}\\\\p{Z}])?$"$/;"	v
EDAM_TIMEZONE_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_TIMEZONE_LEN_MAX = 32$/;"	v
EDAM_TIMEZONE_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_TIMEZONE_LEN_MIN = 1$/;"	v
EDAM_TIMEZONE_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_TIMEZONE_REGEX = "^([A-Za-z_-]+(\/[A-Za-z_-]+)*)|(GMT(-|\\\\+)[0-9]{1,2}(:[0-9]{2})?)$"$/;"	v
EDAM_USER_LINKED_NOTEBOOK_MAX	.\evernote\edam\limits\constants.py	/^EDAM_USER_LINKED_NOTEBOOK_MAX = 100$/;"	v
EDAM_USER_MAIL_LIMIT_DAILY_FREE	.\evernote\edam\limits\constants.py	/^EDAM_USER_MAIL_LIMIT_DAILY_FREE = 50$/;"	v
EDAM_USER_MAIL_LIMIT_DAILY_PREMIUM	.\evernote\edam\limits\constants.py	/^EDAM_USER_MAIL_LIMIT_DAILY_PREMIUM = 200$/;"	v
EDAM_USER_NAME_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_USER_NAME_LEN_MAX = 255$/;"	v
EDAM_USER_NAME_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_USER_NAME_LEN_MIN = 1$/;"	v
EDAM_USER_NAME_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_USER_NAME_REGEX = "^[^\\\\p{Cc}\\\\p{Zl}\\\\p{Zp}]{1,255}$"$/;"	v
EDAM_USER_NOTEBOOKS_MAX	.\evernote\edam\limits\constants.py	/^EDAM_USER_NOTEBOOKS_MAX = 250$/;"	v
EDAM_USER_NOTES_MAX	.\evernote\edam\limits\constants.py	/^EDAM_USER_NOTES_MAX = 100000$/;"	v
EDAM_USER_PASSWORD_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_USER_PASSWORD_LEN_MAX = 64$/;"	v
EDAM_USER_PASSWORD_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_USER_PASSWORD_LEN_MIN = 6$/;"	v
EDAM_USER_PASSWORD_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_USER_PASSWORD_REGEX = "^[A-Za-z0-9!#$%&'()*+,.\/:;<=>?@^_`{|}~\\\\[\\\\]\\\\\\\\-]{6,64}$"$/;"	v
EDAM_USER_RECENT_MAILED_ADDRESSES_MAX	.\evernote\edam\limits\constants.py	/^EDAM_USER_RECENT_MAILED_ADDRESSES_MAX = 10$/;"	v
EDAM_USER_SAVED_SEARCHES_MAX	.\evernote\edam\limits\constants.py	/^EDAM_USER_SAVED_SEARCHES_MAX = 100$/;"	v
EDAM_USER_TAGS_MAX	.\evernote\edam\limits\constants.py	/^EDAM_USER_TAGS_MAX = 100000$/;"	v
EDAM_USER_UPLOAD_LIMIT_FREE	.\evernote\edam\limits\constants.py	/^EDAM_USER_UPLOAD_LIMIT_FREE = 62914560$/;"	v
EDAM_USER_UPLOAD_LIMIT_PREMIUM	.\evernote\edam\limits\constants.py	/^EDAM_USER_UPLOAD_LIMIT_PREMIUM = 1073741824$/;"	v
EDAM_USER_USERNAME_LEN_MAX	.\evernote\edam\limits\constants.py	/^EDAM_USER_USERNAME_LEN_MAX = 64$/;"	v
EDAM_USER_USERNAME_LEN_MIN	.\evernote\edam\limits\constants.py	/^EDAM_USER_USERNAME_LEN_MIN = 1$/;"	v
EDAM_USER_USERNAME_REGEX	.\evernote\edam\limits\constants.py	/^EDAM_USER_USERNAME_REGEX = "^[a-z0-9]([a-z0-9_-]{0,62}[a-z0-9])?$"$/;"	v
EDAM_VERSION_MAJOR	.\evernote\edam\userstore\constants.py	/^EDAM_VERSION_MAJOR = 1$/;"	v
EDAM_VERSION_MINOR	.\evernote\edam\userstore\constants.py	/^EDAM_VERSION_MINOR = 19$/;"	v
END_OF_FILE	.\thrift\transport\TTransport.py	/^  END_OF_FILE = 4$/;"	v	class:TTransportException
ENML_VALIDATION	.\evernote\edam\error\ttypes.py	/^  ENML_VALIDATION = 11$/;"	v	class:EDAMErrorCode
EXCEPTION	.\thrift\Thrift.py	/^  EXCEPTION = 3$/;"	v	class:TMessageType
Errors	.\EDAMTest.py	/^import evernote.edam.error.ttypes as Errors$/;"	i
FAILED	.\evernote\edam\type\ttypes.py	/^  FAILED = 3$/;"	v	class:PremiumOrderStatus
I08	.\thrift\Thrift.py	/^  I08    = 3$/;"	v	class:TType
I16	.\thrift\Thrift.py	/^  I16    = 6$/;"	v	class:TType
I32	.\thrift\Thrift.py	/^  I32    = 8$/;"	v	class:TType
I64	.\thrift\Thrift.py	/^  I64    = 10$/;"	v	class:TType
INIT_INTERN_STRING	.\thrift\protocol\fastbinary.c	1189;"	d	file:
INIT_INTERN_STRING	.\thrift\protocol\fastbinary.c	1197;"	d	file:
INIT_OUTBUF_SIZE	.\thrift\protocol\fastbinary.c	54;"	d	file:
INTERNAL_ERROR	.\evernote\edam\error\ttypes.py	/^  INTERNAL_ERROR = 4$/;"	v	class:EDAMErrorCode
INTERN_STRING	.\thrift\protocol\fastbinary.c	107;"	d	file:
INT_CONV_ERROR_OCCURRED	.\thrift\protocol\fastbinary.c	109;"	d	file:
INVALID_AUTH	.\evernote\edam\error\ttypes.py	/^  INVALID_AUTH = 8$/;"	v	class:EDAMErrorCode
INVALID_DATA	.\thrift\protocol\TProtocol.py	/^  INVALID_DATA = 1$/;"	v	class:TProtocolException
INVALID_MESSAGE_TYPE	.\thrift\Thrift.py	/^  INVALID_MESSAGE_TYPE = 2$/;"	v	class:TApplicationException
IThriftClientFactory	.\thrift\transport\TTwisted.py	/^class IThriftClientFactory(Interface):$/;"	c
IThriftServerFactory	.\thrift\transport\TTwisted.py	/^class IThriftServerFactory(Interface):$/;"	c
Iface	.\evernote\edam\notestore\NoteStore.py	/^class Iface(object):$/;"	c
Iface	.\evernote\edam\userstore\UserStore.py	/^class Iface(object):$/;"	c
Interface	.\thrift\transport\TTwisted.py	/^from zope.interface import implements, Interface, Attribute$/;"	i
LIMIT_REACHED	.\evernote\edam\error\ttypes.py	/^  LIMIT_REACHED = 6$/;"	v	class:EDAMErrorCode
LIST	.\thrift\Thrift.py	/^  LIST   = 15$/;"	v	class:TType
LITTLE_ENDIAN	.\thrift\protocol\fastbinary.c	36;"	d	file:
LinkedNotebook	.\evernote\edam\type\ttypes.py	/^class LinkedNotebook(object):$/;"	c
MANAGER	.\evernote\edam\type\ttypes.py	/^  MANAGER = 7$/;"	v	class:PrivilegeLevel
MAP	.\thrift\Thrift.py	/^  MAP    = 13$/;"	v	class:TType
MAX_LENGTH	.\thrift\transport\TTwisted.py	/^    MAX_LENGTH = 2 ** 31 - 1$/;"	v	class:ThriftClientProtocol
MAX_LENGTH	.\thrift\transport\TTwisted.py	/^    MAX_LENGTH = 2 ** 31 - 1$/;"	v	class:ThriftServerProtocol
MISSING_RESULT	.\thrift\Thrift.py	/^  MISSING_RESULT = 5$/;"	v	class:TApplicationException
MapTypeArgs	.\thrift\protocol\fastbinary.c	/^} MapTypeArgs;$/;"	t	typeref:struct:__anon2	file:
NEGATIVE_SIZE	.\thrift\protocol\TProtocol.py	/^  NEGATIVE_SIZE = 2$/;"	v	class:TProtocolException
NONE	.\evernote\edam\type\ttypes.py	/^  NONE = 0$/;"	v	class:PremiumOrderStatus
NORMAL	.\evernote\edam\type\ttypes.py	/^  NORMAL = 1$/;"	v	class:PrivilegeLevel
NOT_OPEN	.\thrift\transport\TTransport.py	/^  NOT_OPEN = 1$/;"	v	class:TTransportException
Note	.\evernote\edam\type\ttypes.py	/^class Note(object):$/;"	c
NoteAttributes	.\evernote\edam\type\ttypes.py	/^class NoteAttributes(object):$/;"	c
NoteCollectionCounts	.\evernote\edam\notestore\ttypes.py	/^class NoteCollectionCounts(object):$/;"	c
NoteEmailParameters	.\evernote\edam\notestore\ttypes.py	/^class NoteEmailParameters(object):$/;"	c
NoteFilter	.\evernote\edam\notestore\ttypes.py	/^class NoteFilter(object):$/;"	c
NoteList	.\evernote\edam\notestore\ttypes.py	/^class NoteList(object):$/;"	c
NoteMetadata	.\evernote\edam\notestore\ttypes.py	/^class NoteMetadata(object):$/;"	c
NoteSortOrder	.\evernote\edam\type\ttypes.py	/^class NoteSortOrder(object):$/;"	c
NoteStore	.\EDAMTest.py	/^import evernote.edam.notestore.NoteStore as NoteStore$/;"	i
NoteVersionId	.\evernote\edam\notestore\ttypes.py	/^class NoteVersionId(object):$/;"	c
Notebook	.\evernote\edam\type\ttypes.py	/^class Notebook(object):$/;"	c
NotesMetadataList	.\evernote\edam\notestore\ttypes.py	/^class NotesMetadataList(object):$/;"	c
NotesMetadataResultSpec	.\evernote\edam\notestore\ttypes.py	/^class NotesMetadataResultSpec(object):$/;"	c
ONEWAY	.\thrift\Thrift.py	/^  ONEWAY = 4$/;"	v	class:TMessageType
PENDING	.\evernote\edam\type\ttypes.py	/^  PENDING = 1$/;"	v	class:PremiumOrderStatus
PERMISSION_DENIED	.\evernote\edam\error\ttypes.py	/^  PERMISSION_DENIED = 3$/;"	v	class:EDAMErrorCode
PREMIUM	.\evernote\edam\type\ttypes.py	/^  PREMIUM = 3$/;"	v	class:PrivilegeLevel
PremiumOrderStatus	.\evernote\edam\type\ttypes.py	/^class PremiumOrderStatus(object):$/;"	c
PrivilegeLevel	.\evernote\edam\type\ttypes.py	/^class PrivilegeLevel(object):$/;"	c
Processor	.\evernote\edam\notestore\NoteStore.py	/^class Processor(Iface, TProcessor):$/;"	c
Processor	.\evernote\edam\userstore\UserStore.py	/^class Processor(Iface, TProcessor):$/;"	c
Protocol	.\thrift\transport\TTwisted.py	/^    connectionDone$/;"	i
PublicUserInfo	.\evernote\edam\userstore\ttypes.py	/^class PublicUserInfo(object):$/;"	c
Publishing	.\evernote\edam\type\ttypes.py	/^class Publishing(object):$/;"	c
Py_ssize_t	.\thrift\protocol\fastbinary.c	/^typedef int Py_ssize_t;$/;"	t	file:
QUOTA_REACHED	.\evernote\edam\error\ttypes.py	/^  QUOTA_REACHED = 7$/;"	v	class:EDAMErrorCode
QueryFormat	.\evernote\edam\type\ttypes.py	/^class QueryFormat(object):$/;"	c
Queue	.\thrift\server\TNonblockingServer.py	/^import Queue$/;"	i
Queue	.\thrift\server\TServer.py	/^import Queue$/;"	i
RELEVANCE	.\evernote\edam\type\ttypes.py	/^  RELEVANCE = 3$/;"	v	class:NoteSortOrder
REPLY	.\thrift\Thrift.py	/^  REPLY = 2$/;"	v	class:TMessageType
RequestHander	.\thrift\server\THttpServer.py	/^    class RequestHander(BaseHTTPServer.BaseHTTPRequestHandler):$/;"	c	function:THttpServer.__init__
Resource	.\evernote\edam\type\ttypes.py	/^class Resource(object):$/;"	c
ResourceAttributes	.\evernote\edam\type\ttypes.py	/^class ResourceAttributes(object):$/;"	c
SEND_ANSWER	.\thrift\server\TNonblockingServer.py	/^SEND_ANSWER = 3$/;"	v
SET	.\thrift\Thrift.py	/^  SET    = 14$/;"	v	class:TType
SEXP	.\evernote\edam\type\ttypes.py	/^  SEXP = 2$/;"	v	class:QueryFormat
SHARD_UNAVAILABLE	.\evernote\edam\error\ttypes.py	/^  SHARD_UNAVAILABLE = 12$/;"	v	class:EDAMErrorCode
SIZE_LIMIT	.\thrift\protocol\TProtocol.py	/^  SIZE_LIMIT = 3$/;"	v	class:TProtocolException
SKIPBYTES	.\thrift\protocol\fastbinary.c	738;"	d	file:
SKIPBYTES	.\thrift\protocol\fastbinary.c	849;"	d	file:
STOP	.\thrift\Thrift.py	/^  STOP   = 0$/;"	v	class:TType
STRING	.\thrift\Thrift.py	/^  STRING = 11$/;"	v	class:TType
STRUCT	.\thrift\Thrift.py	/^  STRUCT = 12$/;"	v	class:TType
SUPPORT	.\evernote\edam\type\ttypes.py	/^  SUPPORT = 8$/;"	v	class:PrivilegeLevel
SavedSearch	.\evernote\edam\type\ttypes.py	/^class SavedSearch(object):$/;"	c
ServerFactory	.\thrift\transport\TTwisted.py	/^    connectionDone$/;"	i
SetListTypeArgs	.\thrift\protocol\fastbinary.c	/^} SetListTypeArgs;$/;"	t	typeref:struct:__anon1	file:
SharedNotebook	.\evernote\edam\type\ttypes.py	/^class SharedNotebook(object):$/;"	c
StringIO	.\thrift\transport\THttpClient.py	/^from cStringIO import StringIO$/;"	i
StringIO	.\thrift\transport\TTransport.py	/^from cStringIO import StringIO$/;"	i
StringIO	.\thrift\transport\TTwisted.py	/^from cStringIO import StringIO$/;"	i
StructItemSpec	.\thrift\protocol\fastbinary.c	/^} StructItemSpec;$/;"	t	typeref:struct:__anon4	file:
StructTypeArgs	.\thrift\protocol\fastbinary.c	/^} StructTypeArgs;$/;"	t	typeref:struct:__anon3	file:
SyncChunk	.\evernote\edam\notestore\ttypes.py	/^class SyncChunk(object):$/;"	c
SyncState	.\evernote\edam\notestore\ttypes.py	/^class SyncState(object):$/;"	c
TApplicationException	.\thrift\Thrift.py	/^class TApplicationException(TException):$/;"	c
TBinaryProtocol	.\EDAMTest.py	/^import thrift.protocol.TBinaryProtocol as TBinaryProtocol$/;"	i
TBinaryProtocol	.\evernote\edam\error\ttypes.py	/^from thrift.protocol import TBinaryProtocol$/;"	i
TBinaryProtocol	.\evernote\edam\limits\ttypes.py	/^from thrift.protocol import TBinaryProtocol$/;"	i
TBinaryProtocol	.\evernote\edam\notestore\NoteStore.py	/^from thrift.protocol import TBinaryProtocol$/;"	i
TBinaryProtocol	.\evernote\edam\notestore\ttypes.py	/^from thrift.protocol import TBinaryProtocol$/;"	i
TBinaryProtocol	.\evernote\edam\type\ttypes.py	/^from thrift.protocol import TBinaryProtocol$/;"	i
TBinaryProtocol	.\evernote\edam\userstore\UserStore.py	/^from thrift.protocol import TBinaryProtocol$/;"	i
TBinaryProtocol	.\evernote\edam\userstore\ttypes.py	/^from thrift.protocol import TBinaryProtocol$/;"	i
TBinaryProtocol	.\thrift\TSerialization.py	/^from protocol import TBinaryProtocol$/;"	i
TBinaryProtocol	.\thrift\protocol\TBinaryProtocol.py	/^class TBinaryProtocol(TProtocolBase):$/;"	c
TBinaryProtocol	.\thrift\server\TServer.py	/^from thrift.protocol import TBinaryProtocol$/;"	i
TBinaryProtocolAccelerated	.\thrift\protocol\TBinaryProtocol.py	/^class TBinaryProtocolAccelerated(TBinaryProtocol):$/;"	c
TBinaryProtocolAcceleratedFactory	.\thrift\protocol\TBinaryProtocol.py	/^class TBinaryProtocolAcceleratedFactory:$/;"	c
TBinaryProtocolFactory	.\thrift\protocol\TBinaryProtocol.py	/^class TBinaryProtocolFactory:$/;"	c
TBinaryProtocolFactory	.\thrift\server\TNonblockingServer.py	/^from thrift.protocol.TBinaryProtocol import TBinaryProtocolFactory$/;"	i
TBufferedTransport	.\thrift\transport\TTransport.py	/^class TBufferedTransport(TTransportBase,CReadableTransport):$/;"	c
TBufferedTransportFactory	.\thrift\transport\TTransport.py	/^class TBufferedTransportFactory:$/;"	c
TCallbackTransport	.\thrift\transport\TTwisted.py	/^class TCallbackTransport(TMessageSenderTransport):$/;"	c
TException	.\thrift\Thrift.py	/^class TException(Exception):$/;"	c
TException	.\thrift\transport\TTransport.py	/^from thrift.Thrift import TException$/;"	i
TFileObjectTransport	.\thrift\transport\TTransport.py	/^class TFileObjectTransport(TTransportBase):$/;"	c
TForkingServer	.\thrift\server\TServer.py	/^class TForkingServer(TServer):$/;"	c
TFramedTransport	.\thrift\transport\TTransport.py	/^class TFramedTransport(TTransportBase, CReadableTransport):$/;"	c
TFramedTransportFactory	.\thrift\transport\TTransport.py	/^class TFramedTransportFactory:$/;"	c
THttpClient	.\EDAMTest.py	/^import thrift.transport.THttpClient as THttpClient$/;"	i
THttpClient	.\thrift\transport\THttpClient.py	/^class THttpClient(TTransportBase):$/;"	c
THttpServer	.\thrift\server\THttpServer.py	/^class THttpServer(TServer.TServer):$/;"	c
TIMED_OUT	.\thrift\transport\TTransport.py	/^  TIMED_OUT = 3$/;"	v	class:TTransportException
TITLE	.\evernote\edam\type\ttypes.py	/^  TITLE = 5$/;"	v	class:NoteSortOrder
TMemoryBuffer	.\thrift\transport\TTransport.py	/^class TMemoryBuffer(TTransportBase, CReadableTransport):$/;"	c
TMessageSenderTransport	.\thrift\transport\TTwisted.py	/^class TMessageSenderTransport(TTransport.TTransportBase):$/;"	c
TMessageType	.\thrift\Thrift.py	/^class TMessageType:$/;"	c
TNonblockingServer	.\thrift\server\TNonblockingServer.py	/^class TNonblockingServer:$/;"	c
TProcessor	.\evernote\edam\notestore\NoteStore.py	/^from thrift.Thrift import TProcessor$/;"	i
TProcessor	.\evernote\edam\userstore\UserStore.py	/^from thrift.Thrift import TProcessor$/;"	i
TProcessor	.\thrift\Thrift.py	/^class TProcessor:$/;"	c
TProcessor	.\thrift\server\TServer.py	/^from thrift.Thrift import TProcessor$/;"	i
TProtocolBase	.\thrift\protocol\TProtocol.py	/^class TProtocolBase:$/;"	c
TProtocolException	.\thrift\protocol\TProtocol.py	/^class TProtocolException(TException):$/;"	c
TProtocolFactory	.\thrift\protocol\TProtocol.py	/^class TProtocolFactory:$/;"	c
TServer	.\thrift\server\THttpServer.py	/^from thrift.server import TServer$/;"	i
TServer	.\thrift\server\TServer.py	/^class TServer:$/;"	c
TServerSocket	.\thrift\transport\TSocket.py	/^class TServerSocket(TSocketBase, TServerTransportBase):$/;"	c
TServerTransportBase	.\thrift\transport\TTransport.py	/^class TServerTransportBase:$/;"	c
TSimpleServer	.\thrift\server\TServer.py	/^class TSimpleServer(TServer):$/;"	c
TSocket	.\thrift\transport\TSocket.py	/^class TSocket(TSocketBase):$/;"	c
TSocketBase	.\thrift\transport\TSocket.py	/^class TSocketBase(TTransportBase):$/;"	c
TThreadPoolServer	.\thrift\server\TServer.py	/^class TThreadPoolServer(TServer):$/;"	c
TThreadedServer	.\thrift\server\TServer.py	/^class TThreadedServer(TServer):$/;"	c
TTransport	.\evernote\edam\error\ttypes.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\evernote\edam\limits\ttypes.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\evernote\edam\notestore\NoteStore.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\evernote\edam\notestore\ttypes.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\evernote\edam\type\ttypes.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\evernote\edam\userstore\UserStore.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\evernote\edam\userstore\ttypes.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\thrift\TSerialization.py	/^from transport import TTransport$/;"	i
TTransport	.\thrift\server\THttpServer.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\thrift\server\TNonblockingServer.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\thrift\server\TServer.py	/^from thrift.transport import TTransport$/;"	i
TTransport	.\thrift\transport\TTwisted.py	/^from thrift.transport import TTransport$/;"	i
TTransportBase	.\thrift\transport\TTransport.py	/^class TTransportBase:$/;"	c
TTransportException	.\thrift\transport\TTransport.py	/^class TTransportException(TException):$/;"	c
TTransportFactoryBase	.\thrift\transport\TTransport.py	/^class TTransportFactoryBase:$/;"	c
TType	.\thrift\Thrift.py	/^class TType:$/;"	c
TType	.\thrift\protocol\fastbinary.c	/^typedef enum TType {$/;"	g	file:
TType	.\thrift\protocol\fastbinary.c	/^} TType;$/;"	t	typeref:enum:TType	file:
TYPE_MASK	.\thrift\protocol\TBinaryProtocol.py	/^  TYPE_MASK = 0x000000ff$/;"	v	class:TBinaryProtocol
T_BOOL	.\thrift\protocol\fastbinary.c	/^  T_BOOL       = 2,$/;"	e	enum:TType	file:
T_BYTE	.\thrift\protocol\fastbinary.c	/^  T_BYTE       = 3,$/;"	e	enum:TType	file:
T_DOUBLE	.\thrift\protocol\fastbinary.c	/^  T_DOUBLE     = 4,$/;"	e	enum:TType	file:
T_I08	.\thrift\protocol\fastbinary.c	/^  T_I08        = 3,$/;"	e	enum:TType	file:
T_I16	.\thrift\protocol\fastbinary.c	/^  T_I16        = 6,$/;"	e	enum:TType	file:
T_I32	.\thrift\protocol\fastbinary.c	/^  T_I32        = 8,$/;"	e	enum:TType	file:
T_I64	.\thrift\protocol\fastbinary.c	/^  T_I64        = 10,$/;"	e	enum:TType	file:
T_LIST	.\thrift\protocol\fastbinary.c	/^  T_LIST       = 15,$/;"	e	enum:TType	file:
T_MAP	.\thrift\protocol\fastbinary.c	/^  T_MAP        = 13,$/;"	e	enum:TType	file:
T_SET	.\thrift\protocol\fastbinary.c	/^  T_SET        = 14,$/;"	e	enum:TType	file:
T_STOP	.\thrift\protocol\fastbinary.c	/^  T_STOP       = 0,$/;"	e	enum:TType	file:
T_STRING	.\thrift\protocol\fastbinary.c	/^  T_STRING     = 11,$/;"	e	enum:TType	file:
T_STRUCT	.\thrift\protocol\fastbinary.c	/^  T_STRUCT     = 12,$/;"	e	enum:TType	file:
T_U64	.\thrift\protocol\fastbinary.c	/^  T_U64        = 9,$/;"	e	enum:TType	file:
T_UTF16	.\thrift\protocol\fastbinary.c	/^  T_UTF16      = 17$/;"	e	enum:TType	file:
T_UTF7	.\thrift\protocol\fastbinary.c	/^  T_UTF7       = 11,$/;"	e	enum:TType	file:
T_UTF8	.\thrift\protocol\fastbinary.c	/^  T_UTF8       = 16,$/;"	e	enum:TType	file:
T_VOID	.\thrift\protocol\fastbinary.c	/^  T_VOID       = 1,$/;"	e	enum:TType	file:
Tag	.\evernote\edam\type\ttypes.py	/^class Tag(object):$/;"	c
ThriftClientFactory	.\thrift\transport\TTwisted.py	/^class ThriftClientFactory(ClientFactory):$/;"	c
ThriftClientProtocol	.\thrift\transport\TTwisted.py	/^class ThriftClientProtocol(basic.Int32StringReceiver):$/;"	c
ThriftFastBinaryMethods	.\thrift\protocol\fastbinary.c	/^static PyMethodDef ThriftFastBinaryMethods[] = {$/;"	v	file:
ThriftResource	.\thrift\transport\TTwisted.py	/^class ThriftResource(resource.Resource):$/;"	c
ThriftServerFactory	.\thrift\transport\TTwisted.py	/^class ThriftServerFactory(ServerFactory):$/;"	c
ThriftServerProtocol	.\thrift\transport\TTwisted.py	/^class ThriftServerProtocol(basic.Int32StringReceiver):$/;"	c
Types	.\EDAMTest.py	/^import evernote.edam.type.ttypes as Types$/;"	i
UNKNOWN	.\evernote\edam\error\ttypes.py	/^  UNKNOWN = 1$/;"	v	class:EDAMErrorCode
UNKNOWN	.\thrift\Thrift.py	/^  UNKNOWN = 0$/;"	v	class:TApplicationException
UNKNOWN	.\thrift\protocol\TProtocol.py	/^  UNKNOWN = 0$/;"	v	class:TProtocolException
UNKNOWN	.\thrift\transport\TTransport.py	/^  UNKNOWN = 0$/;"	v	class:TTransportException
UNKNOWN_METHOD	.\thrift\Thrift.py	/^  UNKNOWN_METHOD = 1$/;"	v	class:TApplicationException
UPDATED	.\evernote\edam\type\ttypes.py	/^  UPDATED = 2$/;"	v	class:NoteSortOrder
UPDATE_SEQUENCE_NUMBER	.\evernote\edam\type\ttypes.py	/^  UPDATE_SEQUENCE_NUMBER = 4$/;"	v	class:NoteSortOrder
USER	.\evernote\edam\type\ttypes.py	/^  USER = 1$/;"	v	class:QueryFormat
UTF16	.\thrift\Thrift.py	/^  UTF16  = 17$/;"	v	class:TType
UTF7	.\thrift\Thrift.py	/^  UTF7   = 11$/;"	v	class:TType
UTF8	.\thrift\Thrift.py	/^  UTF8   = 16$/;"	v	class:TType
User	.\evernote\edam\type\ttypes.py	/^class User(object):$/;"	c
UserAttributes	.\evernote\edam\type\ttypes.py	/^class UserAttributes(object):$/;"	c
UserStore	.\EDAMTest.py	/^import evernote.edam.userstore.UserStore as UserStore$/;"	i
UserStoreConstants	.\EDAMTest.py	/^import evernote.edam.userstore.constants as UserStoreConstants$/;"	i
VERSION_1	.\thrift\protocol\TBinaryProtocol.py	/^  VERSION_1 = -2147418112$/;"	v	class:TBinaryProtocol
VERSION_MASK	.\thrift\protocol\TBinaryProtocol.py	/^  VERSION_MASK = -65536$/;"	v	class:TBinaryProtocol
VOID	.\thrift\Thrift.py	/^  VOID   = 1$/;"	v	class:TType
WAIT_LEN	.\thrift\server\TNonblockingServer.py	/^WAIT_LEN = 0$/;"	v
WAIT_MESSAGE	.\thrift\server\TNonblockingServer.py	/^WAIT_MESSAGE = 1$/;"	v
WAIT_PROCESS	.\thrift\server\TNonblockingServer.py	/^WAIT_PROCESS = 2$/;"	v
WRONG_METHOD_NAME	.\thrift\Thrift.py	/^  WRONG_METHOD_NAME = 3$/;"	v	class:TApplicationException
Worker	.\thrift\server\TNonblockingServer.py	/^class Worker(threading.Thread):$/;"	c
_NAMES_TO_VALUES	.\evernote\edam\error\ttypes.py	/^  _NAMES_TO_VALUES = {$/;"	v	class:EDAMErrorCode
_NAMES_TO_VALUES	.\evernote\edam\type\ttypes.py	/^  _NAMES_TO_VALUES = {$/;"	v	class:NoteSortOrder
_NAMES_TO_VALUES	.\evernote\edam\type\ttypes.py	/^  _NAMES_TO_VALUES = {$/;"	v	class:PremiumOrderStatus
_NAMES_TO_VALUES	.\evernote\edam\type\ttypes.py	/^  _NAMES_TO_VALUES = {$/;"	v	class:PrivilegeLevel
_NAMES_TO_VALUES	.\evernote\edam\type\ttypes.py	/^  _NAMES_TO_VALUES = {$/;"	v	class:QueryFormat
_VALUES_TO_NAMES	.\evernote\edam\error\ttypes.py	/^  _VALUES_TO_NAMES = {$/;"	v	class:EDAMErrorCode
_VALUES_TO_NAMES	.\evernote\edam\type\ttypes.py	/^  _VALUES_TO_NAMES = {$/;"	v	class:NoteSortOrder
_VALUES_TO_NAMES	.\evernote\edam\type\ttypes.py	/^  _VALUES_TO_NAMES = {$/;"	v	class:PremiumOrderStatus
_VALUES_TO_NAMES	.\evernote\edam\type\ttypes.py	/^  _VALUES_TO_NAMES = {$/;"	v	class:PrivilegeLevel
_VALUES_TO_NAMES	.\evernote\edam\type\ttypes.py	/^  _VALUES_TO_NAMES = {$/;"	v	class:QueryFormat
__BIG_ENDIAN	.\thrift\protocol\fastbinary.c	83;"	d	file:
__BYTE_ORDER	.\thrift\protocol\fastbinary.c	81;"	d	file:
__LITTLE_ENDIAN	.\thrift\protocol\fastbinary.c	82;"	d	file:
__all__	.\evernote\edam\error\__init__.py	/^__all__ = ['ttypes', 'constants']$/;"	v
__all__	.\evernote\edam\limits\__init__.py	/^__all__ = ['ttypes', 'constants']$/;"	v
__all__	.\evernote\edam\notestore\__init__.py	/^__all__ = ['ttypes', 'constants', 'NoteStore']$/;"	v
__all__	.\evernote\edam\type\__init__.py	/^__all__ = ['ttypes', 'constants']$/;"	v
__all__	.\evernote\edam\userstore\__init__.py	/^__all__ = ['ttypes', 'constants', 'UserStore']$/;"	v
__all__	.\thrift\__init__.py	/^__all__ = ['Thrift', 'TSCons']$/;"	v
__all__	.\thrift\protocol\__init__.py	/^__all__ = ['TProtocol', 'TBinaryProtocol', 'fastbinary']$/;"	v
__all__	.\thrift\server\TNonblockingServer.py	/^__all__ = ['TNonblockingServer']$/;"	v
__all__	.\thrift\server\__init__.py	/^__all__ = ['TServer', 'TNonblockingServer']$/;"	v
__all__	.\thrift\transport\__init__.py	/^__all__ = ['TTransport', 'TSocket', 'THttpClient']$/;"	v
__anon1::element_type	.\thrift\protocol\fastbinary.c	/^  TType element_type;$/;"	m	struct:__anon1	file:
__anon1::typeargs	.\thrift\protocol\fastbinary.c	/^  PyObject* typeargs;$/;"	m	struct:__anon1	file:
__anon2::ktag	.\thrift\protocol\fastbinary.c	/^  TType ktag;$/;"	m	struct:__anon2	file:
__anon2::ktypeargs	.\thrift\protocol\fastbinary.c	/^  PyObject* ktypeargs;$/;"	m	struct:__anon2	file:
__anon2::vtag	.\thrift\protocol\fastbinary.c	/^  TType vtag;$/;"	m	struct:__anon2	file:
__anon2::vtypeargs	.\thrift\protocol\fastbinary.c	/^  PyObject* vtypeargs;$/;"	m	struct:__anon2	file:
__anon3::klass	.\thrift\protocol\fastbinary.c	/^  PyObject* klass;$/;"	m	struct:__anon3	file:
__anon3::spec	.\thrift\protocol\fastbinary.c	/^  PyObject* spec;$/;"	m	struct:__anon3	file:
__anon4::attrname	.\thrift\protocol\fastbinary.c	/^  PyObject* attrname;$/;"	m	struct:__anon4	file:
__anon4::defval	.\thrift\protocol\fastbinary.c	/^  PyObject* defval;$/;"	m	struct:__anon4	file:
__anon4::tag	.\thrift\protocol\fastbinary.c	/^  int tag;$/;"	m	struct:__anon4	file:
__anon4::type	.\thrift\protocol\fastbinary.c	/^  TType type;$/;"	m	struct:__anon4	file:
__anon4::typeargs	.\thrift\protocol\fastbinary.c	/^  PyObject* typeargs;$/;"	m	struct:__anon4	file:
__anon5::refill_callable	.\thrift\protocol\fastbinary.c	/^  PyObject* refill_callable;$/;"	m	struct:__anon5	file:
__anon5::stringiobuf	.\thrift\protocol\fastbinary.c	/^  PyObject* stringiobuf;$/;"	m	struct:__anon5	file:
__eq__	.\evernote\edam\error\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:EDAMNotFoundException	file:
__eq__	.\evernote\edam\error\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:EDAMSystemException	file:
__eq__	.\evernote\edam\error\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:EDAMUserException	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:authenticateToSharedNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:authenticateToSharedNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:authenticateToSharedNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:authenticateToSharedNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:copyNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:copyNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createLinkedNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createLinkedNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createSearch_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createSearch_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createSharedNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createSharedNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createTag_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:createTag_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:deleteNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:deleteNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:emailNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:emailNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeInactiveNotes_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeInactiveNotes_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeLinkedNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeLinkedNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeNotes_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeNotes_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeSearch_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeSearch_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeSharedNotebooks_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeSharedNotebooks_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeTag_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:expungeTag_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:findNoteCounts_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:findNoteCounts_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:findNoteOffset_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:findNoteOffset_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:findNotesMetadata_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:findNotesMetadata_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:findNotes_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:findNotes_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getAccountSize_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getAccountSize_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getAds_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getAds_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getDefaultNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getDefaultNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getLinkedNotebookSyncChunk_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getLinkedNotebookSyncChunk_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getLinkedNotebookSyncState_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getLinkedNotebookSyncState_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNoteContent_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNoteContent_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNoteSearchText_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNoteSearchText_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNoteTagNames_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNoteTagNames_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNoteVersion_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNoteVersion_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getPublicNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getPublicNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getRandomAd_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getRandomAd_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceAlternateData_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceAlternateData_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceAttributes_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceAttributes_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceByHash_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceByHash_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceData_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceData_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceRecognition_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceRecognition_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceSearchText_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResourceSearchText_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResource_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getResource_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getSearch_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getSearch_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getSharedNotebookByAuth_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getSharedNotebookByAuth_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getSyncChunk_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getSyncChunk_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getSyncState_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getSyncState_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getTag_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:getTag_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listLinkedNotebooks_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listLinkedNotebooks_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listNoteVersions_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listNoteVersions_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listNotebooks_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listNotebooks_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listSearches_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listSearches_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listSharedNotebooks_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listSharedNotebooks_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listTagsByNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listTagsByNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listTags_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:listTags_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:shareNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:shareNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:stopSharingNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:stopSharingNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:untagAll_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:untagAll_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateLinkedNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateLinkedNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateNote_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateNote_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateNotebook_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateNotebook_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateResource_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateResource_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateSearch_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateSearch_result	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateTag_args	file:
__eq__	.\evernote\edam\notestore\NoteStore.py	/^  def __eq__(self, other):$/;"	m	class:updateTag_result	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:AdImpressions	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:AdParameters	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:NoteCollectionCounts	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:NoteEmailParameters	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:NoteFilter	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:NoteList	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:NoteMetadata	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:NoteVersionId	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:NotesMetadataList	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:NotesMetadataResultSpec	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:SyncChunk	file:
__eq__	.\evernote\edam\notestore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:SyncState	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:Accounting	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:Ad	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:Data	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:LinkedNotebook	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:Note	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:NoteAttributes	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:Notebook	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:Publishing	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:Resource	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:ResourceAttributes	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:SavedSearch	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:SharedNotebook	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:Tag	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:User	file:
__eq__	.\evernote\edam\type\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:UserAttributes	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:authenticate_args	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:authenticate_result	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:checkVersion_args	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:checkVersion_result	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:getPublicUserInfo_args	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:getPublicUserInfo_result	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:getUser_args	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:getUser_result	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:refreshAuthentication_args	file:
__eq__	.\evernote\edam\userstore\UserStore.py	/^  def __eq__(self, other):$/;"	m	class:refreshAuthentication_result	file:
__eq__	.\evernote\edam\userstore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:AuthenticationResult	file:
__eq__	.\evernote\edam\userstore\ttypes.py	/^  def __eq__(self, other):$/;"	m	class:PublicUserInfo	file:
__i386__	.\thrift\protocol\fastbinary.c	29;"	d	file:
__initArgs__	.\thrift\server\TServer.py	/^  def __initArgs__(self, processor, serverTransport,$/;"	m	class:TServer	file:
__init__	.\evernote\edam\error\ttypes.py	/^  def __init__(self, errorCode=None, message=None,):$/;"	m	class:EDAMSystemException
__init__	.\evernote\edam\error\ttypes.py	/^  def __init__(self, errorCode=None, parameter=None,):$/;"	m	class:EDAMUserException
__init__	.\evernote\edam\error\ttypes.py	/^  def __init__(self, identifier=None, key=None,):$/;"	m	class:EDAMNotFoundException
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, adParameters=None,):$/;"	m	class:getAds_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, adParameters=None,):$/;"	m	class:getRandomAd_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, afterUSN=None, maxEntries=None, fullSyncOnly=None,):$/;"	m	class:getSyncChunk_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, filter=None, guid=None,):$/;"	m	class:findNoteOffset_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, filter=None, offset=None, maxNotes=None, resultSpec=None,):$/;"	m	class:findNotesMetadata_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, filter=None, offset=None, maxNotes=None,):$/;"	m	class:findNotes_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, filter=None, withTrash=None,):$/;"	m	class:findNoteCounts_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None, noteOnly=None, tokenizeForIndexing=None,):$/;"	m	class:getNoteSearchText_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None, withContent=None, withResourcesData=None, withResourcesRecognition=None, withResourcesAlternateData=None,):$/;"	m	class:getNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None, withData=None, withRecognition=None, withAttributes=None, withAlternateData=None,):$/;"	m	class:getResource_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:deleteNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:expungeLinkedNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:expungeNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:expungeNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:expungeSearch_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:expungeTag_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getNoteContent_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getNoteTagNames_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getResourceAlternateData_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getResourceAttributes_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getResourceData_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getResourceRecognition_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getResourceSearchText_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getSearch_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:getTag_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:shareNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:stopSharingNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, guid=None,):$/;"	m	class:untagAll_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, linkedNotebook=None, afterUSN=None, maxEntries=None, fullSyncOnly=None,):$/;"	m	class:getLinkedNotebookSyncChunk_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, linkedNotebook=None,):$/;"	m	class:createLinkedNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, linkedNotebook=None,):$/;"	m	class:getLinkedNotebookSyncState_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, linkedNotebook=None,):$/;"	m	class:updateLinkedNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, note=None,):$/;"	m	class:createNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, note=None,):$/;"	m	class:updateNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, noteGuid=None, contentHash=None, withData=None, withRecognition=None, withAlternateData=None,):$/;"	m	class:getResourceByHash_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, noteGuid=None, toNotebookGuid=None,):$/;"	m	class:copyNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, noteGuid=None, updateSequenceNum=None, withResourcesData=None, withResourcesRecognition=None, withResourcesAlternateData=None,):$/;"	m	class:getNoteVersion_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, noteGuid=None,):$/;"	m	class:listNoteVersions_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, noteGuids=None,):$/;"	m	class:expungeNotes_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, notebook=None,):$/;"	m	class:createNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, notebook=None,):$/;"	m	class:updateNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, notebookGuid=None,):$/;"	m	class:listTagsByNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, parameters=None,):$/;"	m	class:emailNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, resource=None,):$/;"	m	class:updateResource_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, search=None,):$/;"	m	class:createSearch_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, search=None,):$/;"	m	class:updateSearch_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, sharedNotebook=None,):$/;"	m	class:createSharedNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, sharedNotebookIds=None,):$/;"	m	class:expungeSharedNotebooks_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, tag=None,):$/;"	m	class:createTag_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None, tag=None,):$/;"	m	class:updateTag_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:expungeInactiveNotes_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:getAccountSize_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:getDefaultNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:getSharedNotebookByAuth_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:getSyncState_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:listLinkedNotebooks_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:listNotebooks_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:listSearches_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:listSharedNotebooks_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:listTags_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, guid=None, noteKey=None,):$/;"	m	class:authenticateToSharedNote_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, handler):$/;"	m	class:Processor
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, iprot, oprot=None):$/;"	m	class:Client
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, shareKey=None, authenticationToken=None,):$/;"	m	class:authenticateToSharedNotebook_args
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, systemException=None, notFoundException=None,):$/;"	m	class:getPublicNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:authenticateToSharedNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:authenticateToSharedNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:createLinkedNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:createSharedNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:expungeLinkedNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:expungeSharedNotebooks_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:getSharedNotebookByAuth_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:listLinkedNotebooks_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:listSharedNotebooks_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:shareNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:updateLinkedNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:copyNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:createNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:createTag_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:deleteNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:expungeNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:expungeNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:expungeNotes_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:expungeSearch_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:expungeTag_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:findNoteCounts_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:findNoteOffset_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:findNotesMetadata_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:findNotes_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getLinkedNotebookSyncChunk_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getLinkedNotebookSyncState_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getNoteContent_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getNoteSearchText_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getNoteTagNames_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getNoteVersion_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getResourceAlternateData_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getResourceAttributes_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getResourceByHash_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getResourceData_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getResourceRecognition_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getResourceSearchText_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getResource_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getSearch_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:getTag_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:listNoteVersions_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:listTagsByNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:updateNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:updateNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:updateResource_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:updateSearch_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:updateTag_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:createNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:createSearch_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:expungeInactiveNotes_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:getAccountSize_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:getAds_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:getDefaultNotebook_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:getRandomAd_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:getSyncChunk_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:getSyncState_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:listNotebooks_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:listSearches_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:listTags_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:emailNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, userException=None, notFoundException=None, systemException=None,):$/;"	m	class:stopSharingNote_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, userException=None, systemException=None, notFoundException=None,):$/;"	m	class:untagAll_result
__init__	.\evernote\edam\notestore\NoteStore.py	/^  def __init__(self, userId=None, publicUri=None,):$/;"	m	class:getPublicNotebook_args
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, adId=None, impressionCount=None, impressionTime=None,):$/;"	m	class:AdImpressions
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, clientLanguage=None, impressions=None, supportHtml=None, clientProperties=None,):$/;"	m	class:AdParameters
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, currentTime=None, chunkHighUSN=None, updateCount=None, notes=None, notebooks=None, tags=None, searches=None, resources=None, expungedNotes=None, expungedNotebooks=None, expungedTags=None, expungedSearches=None, linkedNotebooks=None, expungedLinkedNotebooks=None,):$/;"	m	class:SyncChunk
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, currentTime=None, fullSyncBefore=None, updateCount=None, uploaded=None,):$/;"	m	class:SyncState
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, guid=None, note=None, toAddresses=None, ccAddresses=None, subject=None, message=None,):$/;"	m	class:NoteEmailParameters
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, guid=None, title=None, contentLength=None, created=None, updated=None, updateSequenceNum=None, notebookGuid=None, tagGuids=None, attributes=None, largestResourceMime=None, largestResourceSize=None,):$/;"	m	class:NoteMetadata
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, includeTitle=None, includeContentLength=None, includeCreated=None, includeUpdated=None, includeUpdateSequenceNum=None, includeNotebookGuid=None, includeTagGuids=None, includeAttributes=None, includeLargestResourceMime=None, includeLargestResourceSize=None,):$/;"	m	class:NotesMetadataResultSpec
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, notebookCounts=None, tagCounts=None, trashCount=None,):$/;"	m	class:NoteCollectionCounts
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, order=None, ascending=None, words=None, notebookGuid=None, tagGuids=None, timeZone=None, inactive=None,):$/;"	m	class:NoteFilter
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, startIndex=None, totalNotes=None, notes=None, stoppedWords=None, searchedWords=None, updateCount=None,):$/;"	m	class:NoteList
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, startIndex=None, totalNotes=None, notes=None, stoppedWords=None, searchedWords=None, updateCount=None,):$/;"	m	class:NotesMetadataList
__init__	.\evernote\edam\notestore\ttypes.py	/^  def __init__(self, updateSequenceNum=None, updated=None, saved=None, title=None,):$/;"	m	class:NoteVersionId
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, bodyHash=None, size=None, body=None,):$/;"	m	class:Data
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, defaultLocationName=None, defaultLatitude=None, defaultLongitude=None, preactivation=None, viewedPromotions=None, incomingEmailAddress=None, recentMailedAddresses=None, comments=None, dateAgreedToTermsOfService=None, maxReferrals=None, referralCount=None, refererCode=None, sentEmailDate=None, sentEmailCount=None, dailyEmailLimit=None, emailOptOutDate=None, partnerEmailOptInDate=None, preferredLanguage=None, preferredCountry=None, clipFullPage=None, twitterUserName=None, twitterId=None, groupName=None, recognitionLanguage=None, customerProfileId=None, referralProof=None, educationalDiscount=None, businessAddress=None,):$/;"	m	class:UserAttributes
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, guid=None, name=None, parentGuid=None, updateSequenceNum=None,):$/;"	m	class:Tag
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, guid=None, name=None, query=None, format=None, updateSequenceNum=None,):$/;"	m	class:SavedSearch
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, guid=None, name=None, updateSequenceNum=None, defaultNotebook=None, serviceCreated=None, serviceUpdated=None, publishing=None, published=None, stack=None, sharedNotebookIds=None,):$/;"	m	class:Notebook
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, guid=None, noteGuid=None, data=None, mime=None, width=None, height=None, duration=None, active=None, recognition=None, attributes=None, updateSequenceNum=None, alternateData=None,):$/;"	m	class:Resource
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, guid=None, title=None, content=None, contentHash=None, contentLength=None, created=None, updated=None, deleted=None, active=None, updateSequenceNum=None, notebookGuid=None, tagGuids=None, resources=None, attributes=None, tagNames=None,):$/;"	m	class:Note
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, id=None, userId=None, notebookGuid=None, email=None, notebookModifiable=None, requireLogin=None, serviceCreated=None, shareKey=None, username=None,):$/;"	m	class:SharedNotebook
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, id=None, username=None, email=None, name=None, timezone=None, privilege=None, created=None, updated=None, deleted=None, active=None, shardId=None, attributes=None, accounting=None,):$/;"	m	class:User
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, id=None, width=None, height=None, advertiserName=None, imageUrl=None, destinationUrl=None, displaySeconds=None, score=None, image=None, imageMime=None, html=None, displayFrequency=None, openInTrunk=None,):$/;"	m	class:Ad
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, shareName=None, username=None, shardId=None, shareKey=None, uri=None, guid=None, updateSequenceNum=None,):$/;"	m	class:LinkedNotebook
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, sourceURL=None, timestamp=None, latitude=None, longitude=None, altitude=None, cameraMake=None, cameraModel=None, clientWillIndex=None, recoType=None, fileName=None, attachment=None,):$/;"	m	class:ResourceAttributes
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, subjectDate=None, latitude=None, longitude=None, altitude=None, author=None, source=None, sourceURL=None, sourceApplication=None, shareDate=None,):$/;"	m	class:NoteAttributes
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, uploadLimit=None, uploadLimitEnd=None, uploadLimitNextMonth=None, premiumServiceStatus=None, premiumOrderNumber=None, premiumCommerceService=None, premiumServiceStart=None, premiumServiceSKU=None, lastSuccessfulCharge=None, lastFailedCharge=None, lastFailedChargeReason=None, nextPaymentDue=None, premiumLockUntil=None, updated=None, premiumSubscriptionNumber=None, lastRequestedCharge=None, currency=None, unitPrice=None,):$/;"	m	class:Accounting
__init__	.\evernote\edam\type\ttypes.py	/^  def __init__(self, uri=None, order=None, ascending=None, publicDescription=None,):$/;"	m	class:Publishing
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:getUser_args
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, authenticationToken=None,):$/;"	m	class:refreshAuthentication_args
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, clientName=None, edamVersionMajor=thrift_spec[2][4], edamVersionMinor=thrift_spec[3][4],):$/;"	m	class:checkVersion_args
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, handler):$/;"	m	class:Processor
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, iprot, oprot=None):$/;"	m	class:Client
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, success=None, notFoundException=None, systemException=None, userException=None,):$/;"	m	class:getPublicUserInfo_result
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:authenticate_result
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:getUser_result
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, success=None, userException=None, systemException=None,):$/;"	m	class:refreshAuthentication_result
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, success=None,):$/;"	m	class:checkVersion_result
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, username=None, password=None, consumerKey=None, consumerSecret=None,):$/;"	m	class:authenticate_args
__init__	.\evernote\edam\userstore\UserStore.py	/^  def __init__(self, username=None,):$/;"	m	class:getPublicUserInfo_args
__init__	.\evernote\edam\userstore\ttypes.py	/^  def __init__(self, currentTime=None, authenticationToken=None, expiration=None, user=None, publicUserInfo=None,):$/;"	m	class:AuthenticationResult
__init__	.\evernote\edam\userstore\ttypes.py	/^  def __init__(self, userId=None, shardId=None, privilege=None, username=None,):$/;"	m	class:PublicUserInfo
__init__	.\thrift\Thrift.py	/^  def __init__(self, message=None):$/;"	m	class:TException
__init__	.\thrift\Thrift.py	/^  def __init__(self, type=UNKNOWN, message=None):$/;"	m	class:TApplicationException
__init__	.\thrift\protocol\TBinaryProtocol.py	/^  def __init__(self, strictRead=False, strictWrite=True):$/;"	m	class:TBinaryProtocolFactory
__init__	.\thrift\protocol\TBinaryProtocol.py	/^  def __init__(self, trans, strictRead=False, strictWrite=True):$/;"	m	class:TBinaryProtocol
__init__	.\thrift\protocol\TProtocol.py	/^  def __init__(self, trans):$/;"	m	class:TProtocolBase
__init__	.\thrift\protocol\TProtocol.py	/^  def __init__(self, type=UNKNOWN, message=None):$/;"	m	class:TProtocolException
__init__	.\thrift\server\THttpServer.py	/^  def __init__(self, processor, server_address,$/;"	m	class:THttpServer
__init__	.\thrift\server\TNonblockingServer.py	/^    def __init__(self, new_socket, wake_up):$/;"	m	class:Connection
__init__	.\thrift\server\TNonblockingServer.py	/^    def __init__(self, processor, lsocket, inputProtocolFactory=None, $/;"	m	class:TNonblockingServer
__init__	.\thrift\server\TNonblockingServer.py	/^    def __init__(self, queue):$/;"	m	class:Worker
__init__	.\thrift\server\TServer.py	/^  def __init__(self, *args):$/;"	m	class:TForkingServer
__init__	.\thrift\server\TServer.py	/^  def __init__(self, *args):$/;"	m	class:TServer
__init__	.\thrift\server\TServer.py	/^  def __init__(self, *args):$/;"	m	class:TSimpleServer
__init__	.\thrift\server\TServer.py	/^  def __init__(self, *args):$/;"	m	class:TThreadPoolServer
__init__	.\thrift\server\TServer.py	/^  def __init__(self, *args):$/;"	m	class:TThreadedServer
__init__	.\thrift\transport\THttpClient.py	/^  def __init__(self, uri_or_host, port=None, path=None):$/;"	m	class:THttpClient
__init__	.\thrift\transport\TSocket.py	/^  def __init__(self, host='localhost', port=9090, unix_socket=None):$/;"	m	class:TSocket
__init__	.\thrift\transport\TSocket.py	/^  def __init__(self, port=9090, unix_socket=None):$/;"	m	class:TServerSocket
__init__	.\thrift\transport\TTransport.py	/^  def __init__(self, fileobj):$/;"	m	class:TFileObjectTransport
__init__	.\thrift\transport\TTransport.py	/^  def __init__(self, trans):$/;"	m	class:TBufferedTransport
__init__	.\thrift\transport\TTransport.py	/^  def __init__(self, trans,):$/;"	m	class:TFramedTransport
__init__	.\thrift\transport\TTransport.py	/^  def __init__(self, type=UNKNOWN, message=None):$/;"	m	class:TTransportException
__init__	.\thrift\transport\TTransport.py	/^  def __init__(self, value=None):$/;"	m	class:TMemoryBuffer
__init__	.\thrift\transport\TTwisted.py	/^    def __init__(self):$/;"	m	class:TMessageSenderTransport
__init__	.\thrift\transport\TTwisted.py	/^    def __init__(self, client_class, iprot_factory, oprot_factory=None):$/;"	m	class:ThriftClientFactory
__init__	.\thrift\transport\TTwisted.py	/^    def __init__(self, client_class, iprot_factory, oprot_factory=None):$/;"	m	class:ThriftClientProtocol
__init__	.\thrift\transport\TTwisted.py	/^    def __init__(self, func):$/;"	m	class:TCallbackTransport
__init__	.\thrift\transport\TTwisted.py	/^    def __init__(self, processor, inputProtocolFactory,$/;"	m	class:ThriftResource
__init__	.\thrift\transport\TTwisted.py	/^    def __init__(self, processor, iprot_factory, oprot_factory=None):$/;"	m	class:ThriftServerFactory
__ne__	.\evernote\edam\error\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:EDAMNotFoundException	file:
__ne__	.\evernote\edam\error\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:EDAMSystemException	file:
__ne__	.\evernote\edam\error\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:EDAMUserException	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:authenticateToSharedNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:authenticateToSharedNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:authenticateToSharedNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:authenticateToSharedNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:copyNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:copyNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createLinkedNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createLinkedNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createSearch_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createSearch_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createSharedNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createSharedNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createTag_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:createTag_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:deleteNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:deleteNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:emailNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:emailNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeInactiveNotes_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeInactiveNotes_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeLinkedNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeLinkedNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeNotes_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeNotes_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeSearch_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeSearch_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeSharedNotebooks_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeSharedNotebooks_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeTag_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:expungeTag_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:findNoteCounts_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:findNoteCounts_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:findNoteOffset_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:findNoteOffset_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:findNotesMetadata_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:findNotesMetadata_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:findNotes_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:findNotes_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getAccountSize_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getAccountSize_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getAds_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getAds_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getDefaultNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getDefaultNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getLinkedNotebookSyncChunk_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getLinkedNotebookSyncChunk_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getLinkedNotebookSyncState_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getLinkedNotebookSyncState_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNoteContent_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNoteContent_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNoteSearchText_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNoteSearchText_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNoteTagNames_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNoteTagNames_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNoteVersion_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNoteVersion_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getPublicNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getPublicNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getRandomAd_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getRandomAd_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceAlternateData_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceAlternateData_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceAttributes_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceAttributes_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceByHash_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceByHash_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceData_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceData_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceRecognition_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceRecognition_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceSearchText_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResourceSearchText_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResource_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getResource_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getSearch_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getSearch_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getSharedNotebookByAuth_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getSharedNotebookByAuth_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getSyncChunk_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getSyncChunk_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getSyncState_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getSyncState_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getTag_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:getTag_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listLinkedNotebooks_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listLinkedNotebooks_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listNoteVersions_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listNoteVersions_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listNotebooks_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listNotebooks_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listSearches_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listSearches_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listSharedNotebooks_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listSharedNotebooks_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listTagsByNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listTagsByNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listTags_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:listTags_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:shareNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:shareNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:stopSharingNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:stopSharingNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:untagAll_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:untagAll_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateLinkedNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateLinkedNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateNote_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateNote_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateNotebook_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateNotebook_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateResource_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateResource_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateSearch_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateSearch_result	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateTag_args	file:
__ne__	.\evernote\edam\notestore\NoteStore.py	/^  def __ne__(self, other):$/;"	m	class:updateTag_result	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:AdImpressions	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:AdParameters	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:NoteCollectionCounts	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:NoteEmailParameters	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:NoteFilter	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:NoteList	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:NoteMetadata	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:NoteVersionId	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:NotesMetadataList	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:NotesMetadataResultSpec	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:SyncChunk	file:
__ne__	.\evernote\edam\notestore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:SyncState	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:Accounting	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:Ad	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:Data	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:LinkedNotebook	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:Note	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:NoteAttributes	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:Notebook	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:Publishing	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:Resource	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:ResourceAttributes	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:SavedSearch	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:SharedNotebook	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:Tag	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:User	file:
__ne__	.\evernote\edam\type\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:UserAttributes	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:authenticate_args	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:authenticate_result	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:checkVersion_args	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:checkVersion_result	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:getPublicUserInfo_args	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:getPublicUserInfo_result	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:getUser_args	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:getUser_result	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:refreshAuthentication_args	file:
__ne__	.\evernote\edam\userstore\UserStore.py	/^  def __ne__(self, other):$/;"	m	class:refreshAuthentication_result	file:
__ne__	.\evernote\edam\userstore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:AuthenticationResult	file:
__ne__	.\evernote\edam\userstore\ttypes.py	/^  def __ne__(self, other):$/;"	m	class:PublicUserInfo	file:
__repr__	.\evernote\edam\error\ttypes.py	/^  def __repr__(self):$/;"	m	class:EDAMNotFoundException	file:
__repr__	.\evernote\edam\error\ttypes.py	/^  def __repr__(self):$/;"	m	class:EDAMSystemException	file:
__repr__	.\evernote\edam\error\ttypes.py	/^  def __repr__(self):$/;"	m	class:EDAMUserException	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:authenticateToSharedNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:authenticateToSharedNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:authenticateToSharedNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:authenticateToSharedNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:copyNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:copyNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createLinkedNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createLinkedNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createSearch_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createSearch_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createSharedNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createSharedNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createTag_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:createTag_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:deleteNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:deleteNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:emailNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:emailNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeInactiveNotes_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeInactiveNotes_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeLinkedNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeLinkedNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeNotes_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeNotes_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeSearch_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeSearch_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeSharedNotebooks_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeSharedNotebooks_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeTag_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:expungeTag_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:findNoteCounts_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:findNoteCounts_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:findNoteOffset_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:findNoteOffset_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:findNotesMetadata_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:findNotesMetadata_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:findNotes_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:findNotes_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getAccountSize_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getAccountSize_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getAds_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getAds_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getDefaultNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getDefaultNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getLinkedNotebookSyncChunk_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getLinkedNotebookSyncChunk_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getLinkedNotebookSyncState_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getLinkedNotebookSyncState_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNoteContent_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNoteContent_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNoteSearchText_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNoteSearchText_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNoteTagNames_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNoteTagNames_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNoteVersion_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNoteVersion_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getPublicNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getPublicNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getRandomAd_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getRandomAd_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceAlternateData_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceAlternateData_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceAttributes_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceAttributes_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceByHash_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceByHash_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceData_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceData_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceRecognition_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceRecognition_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceSearchText_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResourceSearchText_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResource_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getResource_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getSearch_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getSearch_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getSharedNotebookByAuth_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getSharedNotebookByAuth_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getSyncChunk_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getSyncChunk_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getSyncState_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getSyncState_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getTag_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:getTag_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listLinkedNotebooks_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listLinkedNotebooks_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listNoteVersions_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listNoteVersions_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listNotebooks_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listNotebooks_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listSearches_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listSearches_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listSharedNotebooks_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listSharedNotebooks_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listTagsByNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listTagsByNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listTags_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:listTags_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:shareNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:shareNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:stopSharingNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:stopSharingNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:untagAll_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:untagAll_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateLinkedNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateLinkedNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateNote_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateNote_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateNotebook_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateNotebook_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateResource_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateResource_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateSearch_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateSearch_result	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateTag_args	file:
__repr__	.\evernote\edam\notestore\NoteStore.py	/^  def __repr__(self):$/;"	m	class:updateTag_result	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:AdImpressions	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:AdParameters	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:NoteCollectionCounts	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:NoteEmailParameters	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:NoteFilter	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:NoteList	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:NoteMetadata	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:NoteVersionId	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:NotesMetadataList	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:NotesMetadataResultSpec	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:SyncChunk	file:
__repr__	.\evernote\edam\notestore\ttypes.py	/^  def __repr__(self):$/;"	m	class:SyncState	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:Accounting	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:Ad	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:Data	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:LinkedNotebook	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:Note	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:NoteAttributes	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:Notebook	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:Publishing	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:Resource	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:ResourceAttributes	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:SavedSearch	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:SharedNotebook	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:Tag	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:User	file:
__repr__	.\evernote\edam\type\ttypes.py	/^  def __repr__(self):$/;"	m	class:UserAttributes	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:authenticate_args	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:authenticate_result	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:checkVersion_args	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:checkVersion_result	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:getPublicUserInfo_args	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:getPublicUserInfo_result	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:getUser_args	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:getUser_result	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:refreshAuthentication_args	file:
__repr__	.\evernote\edam\userstore\UserStore.py	/^  def __repr__(self):$/;"	m	class:refreshAuthentication_result	file:
__repr__	.\evernote\edam\userstore\ttypes.py	/^  def __repr__(self):$/;"	m	class:AuthenticationResult	file:
__repr__	.\evernote\edam\userstore\ttypes.py	/^  def __repr__(self):$/;"	m	class:PublicUserInfo	file:
__str__	.\evernote\edam\error\ttypes.py	/^  def __str__(self):$/;"	m	class:EDAMNotFoundException	file:
__str__	.\evernote\edam\error\ttypes.py	/^  def __str__(self):$/;"	m	class:EDAMSystemException	file:
__str__	.\evernote\edam\error\ttypes.py	/^  def __str__(self):$/;"	m	class:EDAMUserException	file:
__str__	.\thrift\Thrift.py	/^  def __str__(self):$/;"	m	class:TApplicationException	file:
__withTimeout	.\thrift\transport\THttpClient.py	/^  def __withTimeout(f):$/;"	m	class:THttpClient	file:
_cbProcess	.\thrift\transport\TTwisted.py	/^    def _cbProcess(self, _, request, tmo):$/;"	m	class:ThriftResource
_f	.\thrift\transport\THttpClient.py	/^    def _f(*args, **kwargs):$/;"	f	function:THttpClient.__withTimeout
_get_message	.\thrift\Thrift.py	/^    def _get_message(self):$/;"	m	class:TException
_read_len	.\thrift\server\TNonblockingServer.py	/^    def _read_len(self):$/;"	m	class:Connection
_resolveAddr	.\thrift\transport\TSocket.py	/^  def _resolveAddr(self):$/;"	m	class:TSocketBase
_select	.\thrift\server\TNonblockingServer.py	/^    def _select(self):$/;"	m	class:TNonblockingServer
_set_message	.\thrift\Thrift.py	/^    def _set_message(self, message):$/;"	m	class:TException
accept	.\thrift\transport\TSocket.py	/^  def accept(self):$/;"	m	class:TServerSocket
accept	.\thrift\transport\TTransport.py	/^  def accept(self):$/;"	m	class:TServerTransportBase
allowedMethods	.\thrift\transport\TTwisted.py	/^    allowedMethods = ('POST',)$/;"	v	class:ThriftResource
attrname	.\thrift\protocol\fastbinary.c	/^  PyObject* attrname;$/;"	m	struct:__anon4	file:
authResult	.\EDAMTest.py	/^    authResult = userStore.authenticate(username, password,$/;"	v
authToken	.\EDAMTest.py	/^authToken = authResult.authenticationToken$/;"	v
authenticate	.\evernote\edam\userstore\UserStore.py	/^  def authenticate(self, username, password, consumerKey, consumerSecret):$/;"	m	class:Client
authenticate	.\evernote\edam\userstore\UserStore.py	/^  def authenticate(self, username, password, consumerKey, consumerSecret):$/;"	m	class:Iface
authenticateToSharedNote	.\evernote\edam\notestore\NoteStore.py	/^  def authenticateToSharedNote(self, guid, noteKey):$/;"	m	class:Client
authenticateToSharedNote	.\evernote\edam\notestore\NoteStore.py	/^  def authenticateToSharedNote(self, guid, noteKey):$/;"	m	class:Iface
authenticateToSharedNote_args	.\evernote\edam\notestore\NoteStore.py	/^class authenticateToSharedNote_args(object):$/;"	c
authenticateToSharedNote_result	.\evernote\edam\notestore\NoteStore.py	/^class authenticateToSharedNote_result(object):$/;"	c
authenticateToSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def authenticateToSharedNotebook(self, shareKey, authenticationToken):$/;"	m	class:Client
authenticateToSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def authenticateToSharedNotebook(self, shareKey, authenticationToken):$/;"	m	class:Iface
authenticateToSharedNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class authenticateToSharedNotebook_args(object):$/;"	c
authenticateToSharedNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class authenticateToSharedNotebook_result(object):$/;"	c
authenticate_args	.\evernote\edam\userstore\UserStore.py	/^class authenticate_args(object):$/;"	c
authenticate_result	.\evernote\edam\userstore\UserStore.py	/^class authenticate_result(object):$/;"	c
basic	.\thrift\transport\TTwisted.py	/^from twisted.protocols import basic$/;"	i
binascii	.\EDAMTest.py	/^import binascii$/;"	i
buildProtocol	.\thrift\transport\TTwisted.py	/^    def buildProtocol(self, addr):$/;"	m	class:ThriftClientFactory
checkTypeByte	.\thrift\protocol\fastbinary.c	/^checkTypeByte(DecodeBuffer* input, TType expected) {$/;"	f	file:
checkVersion	.\evernote\edam\userstore\UserStore.py	/^  def checkVersion(self, clientName, edamVersionMajor, edamVersionMinor):$/;"	m	class:Client
checkVersion	.\evernote\edam\userstore\UserStore.py	/^  def checkVersion(self, clientName, edamVersionMajor, edamVersionMinor):$/;"	m	class:Iface
checkVersion_args	.\evernote\edam\userstore\UserStore.py	/^class checkVersion_args(object):$/;"	c
checkVersion_result	.\evernote\edam\userstore\UserStore.py	/^class checkVersion_result(object):$/;"	c
check_ssize_t_32	.\thrift\protocol\fastbinary.c	/^check_ssize_t_32(Py_ssize_t len) {$/;"	f	file:
client_class	.\thrift\transport\TTwisted.py	/^    client_class = Attribute("Thrift client class")$/;"	v	class:IThriftClientFactory
close	.\thrift\server\TNonblockingServer.py	/^    def close(self):$/;"	m	class:Connection
close	.\thrift\server\TNonblockingServer.py	/^    def close(self):$/;"	m	class:TNonblockingServer
close	.\thrift\transport\THttpClient.py	/^  def close(self):$/;"	m	class:THttpClient
close	.\thrift\transport\TSocket.py	/^  def close(self):$/;"	m	class:TSocketBase
close	.\thrift\transport\TTransport.py	/^  def close(self):$/;"	m	class:TBufferedTransport
close	.\thrift\transport\TTransport.py	/^  def close(self):$/;"	m	class:TFileObjectTransport
close	.\thrift\transport\TTransport.py	/^  def close(self):$/;"	m	class:TFramedTransport
close	.\thrift\transport\TTransport.py	/^  def close(self):$/;"	m	class:TMemoryBuffer
close	.\thrift\transport\TTransport.py	/^  def close(self):$/;"	m	class:TServerTransportBase
close	.\thrift\transport\TTransport.py	/^  def close(self):$/;"	m	class:TTransportBase
collect_children	.\thrift\server\TServer.py	/^  def collect_children(self):$/;"	m	class:TForkingServer
connectionDone	.\thrift\transport\TTwisted.py	/^    connectionDone$/;"	i
connectionLost	.\thrift\transport\TTwisted.py	/^    def connectionLost(self, reason=connectionDone):$/;"	m	class:ThriftClientProtocol
connectionMade	.\thrift\transport\TTwisted.py	/^    def connectionMade(self):$/;"	m	class:ThriftClientProtocol
consumerKey	.\EDAMTest.py	/^consumerKey = "paul356"$/;"	v
consumerSecret	.\EDAMTest.py	/^consumerSecret = "5a581ee7624a0e13"$/;"	v
copyNote	.\evernote\edam\notestore\NoteStore.py	/^  def copyNote(self, authenticationToken, noteGuid, toNotebookGuid):$/;"	m	class:Client
copyNote	.\evernote\edam\notestore\NoteStore.py	/^  def copyNote(self, authenticationToken, noteGuid, toNotebookGuid):$/;"	m	class:Iface
copyNote_args	.\evernote\edam\notestore\NoteStore.py	/^class copyNote_args(object):$/;"	c
copyNote_result	.\evernote\edam\notestore\NoteStore.py	/^class copyNote_result(object):$/;"	c
createLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def createLinkedNotebook(self, authenticationToken, linkedNotebook):$/;"	m	class:Client
createLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def createLinkedNotebook(self, authenticationToken, linkedNotebook):$/;"	m	class:Iface
createLinkedNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class createLinkedNotebook_args(object):$/;"	c
createLinkedNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class createLinkedNotebook_result(object):$/;"	c
createNote	.\evernote\edam\notestore\NoteStore.py	/^  def createNote(self, authenticationToken, note):$/;"	m	class:Client
createNote	.\evernote\edam\notestore\NoteStore.py	/^  def createNote(self, authenticationToken, note):$/;"	m	class:Iface
createNote_args	.\evernote\edam\notestore\NoteStore.py	/^class createNote_args(object):$/;"	c
createNote_result	.\evernote\edam\notestore\NoteStore.py	/^class createNote_result(object):$/;"	c
createNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def createNotebook(self, authenticationToken, notebook):$/;"	m	class:Client
createNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def createNotebook(self, authenticationToken, notebook):$/;"	m	class:Iface
createNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class createNotebook_args(object):$/;"	c
createNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class createNotebook_result(object):$/;"	c
createSearch	.\evernote\edam\notestore\NoteStore.py	/^  def createSearch(self, authenticationToken, search):$/;"	m	class:Client
createSearch	.\evernote\edam\notestore\NoteStore.py	/^  def createSearch(self, authenticationToken, search):$/;"	m	class:Iface
createSearch_args	.\evernote\edam\notestore\NoteStore.py	/^class createSearch_args(object):$/;"	c
createSearch_result	.\evernote\edam\notestore\NoteStore.py	/^class createSearch_result(object):$/;"	c
createSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def createSharedNotebook(self, authenticationToken, sharedNotebook):$/;"	m	class:Client
createSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def createSharedNotebook(self, authenticationToken, sharedNotebook):$/;"	m	class:Iface
createSharedNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class createSharedNotebook_args(object):$/;"	c
createSharedNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class createSharedNotebook_result(object):$/;"	c
createTag	.\evernote\edam\notestore\NoteStore.py	/^  def createTag(self, authenticationToken, tag):$/;"	m	class:Client
createTag	.\evernote\edam\notestore\NoteStore.py	/^  def createTag(self, authenticationToken, tag):$/;"	m	class:Iface
createTag_args	.\evernote\edam\notestore\NoteStore.py	/^class createTag_args(object):$/;"	c
createTag_result	.\evernote\edam\notestore\NoteStore.py	/^class createTag_result(object):$/;"	c
createdNote	.\EDAMTest.py	/^createdNote = noteStore.createNote(authToken, note)$/;"	v
cstringio_buf	.\thrift\transport\TTransport.py	/^  def cstringio_buf(self):$/;"	m	class:CReadableTransport
cstringio_buf	.\thrift\transport\TTransport.py	/^  def cstringio_buf(self):$/;"	m	class:TBufferedTransport
cstringio_buf	.\thrift\transport\TTransport.py	/^  def cstringio_buf(self):$/;"	m	class:TFramedTransport
cstringio_buf	.\thrift\transport\TTransport.py	/^  def cstringio_buf(self):$/;"	m	class:TMemoryBuffer
cstringio_refill	.\thrift\transport\TTransport.py	/^  def cstringio_refill(self, partialread, reqlen):$/;"	m	class:CReadableTransport
cstringio_refill	.\thrift\transport\TTransport.py	/^  def cstringio_refill(self, partialread, reqlen):$/;"	m	class:TBufferedTransport
cstringio_refill	.\thrift\transport\TTransport.py	/^  def cstringio_refill(self, partialread, reqlen):$/;"	m	class:TMemoryBuffer
cstringio_refill	.\thrift\transport\TTransport.py	/^  def cstringio_refill(self, prefix, reqlen):$/;"	m	class:TFramedTransport
data	.\EDAMTest.py	/^data = Types.Data()$/;"	v
decode_binary	.\thrift\protocol\fastbinary.c	/^decode_binary(PyObject *self, PyObject *args) {$/;"	f	file:
decode_buffer_from_obj	.\thrift\protocol\fastbinary.c	/^decode_buffer_from_obj(DecodeBuffer* dest, PyObject* obj) {$/;"	f	file:
decode_struct	.\thrift\protocol\fastbinary.c	/^decode_struct(DecodeBuffer* input, PyObject* output, PyObject* spec_seq) {$/;"	f	file:
decode_val	.\thrift\protocol\fastbinary.c	/^decode_val(DecodeBuffer* input, TType type, PyObject* typeargs) {$/;"	f	file:
defaultNotebook	.\EDAMTest.py	/^        defaultNotebook = notebook$/;"	v
defer	.\thrift\transport\TTwisted.py	/^from twisted.internet import defer$/;"	i
defval	.\thrift\protocol\fastbinary.c	/^  PyObject* defval;$/;"	m	struct:__anon4	file:
deleteNote	.\evernote\edam\notestore\NoteStore.py	/^  def deleteNote(self, authenticationToken, guid):$/;"	m	class:Client
deleteNote	.\evernote\edam\notestore\NoteStore.py	/^  def deleteNote(self, authenticationToken, guid):$/;"	m	class:Iface
deleteNote_args	.\evernote\edam\notestore\NoteStore.py	/^class deleteNote_args(object):$/;"	c
deleteNote_result	.\evernote\edam\notestore\NoteStore.py	/^class deleteNote_result(object):$/;"	c
deserialize	.\thrift\TSerialization.py	/^def deserialize(base, buf, protocol_factory = TBinaryProtocol.TBinaryProtocolFactory()):$/;"	f
dispatch	.\thrift\transport\TTwisted.py	/^    def dispatch(self, msg):$/;"	m	class:ThriftClientProtocol
dispatch	.\thrift\transport\TTwisted.py	/^    def dispatch(self, msg):$/;"	m	class:ThriftServerProtocol
do_POST	.\thrift\server\THttpServer.py	/^      def do_POST(self):$/;"	m	class:THttpServer.__init__.RequestHander
edam	.\EDAMTest.py	/^import evernote.edam.error.ttypes as Errors$/;"	i
edam	.\EDAMTest.py	/^import evernote.edam.notestore.NoteStore as NoteStore$/;"	i
edam	.\EDAMTest.py	/^import evernote.edam.type.ttypes as Types$/;"	i
edam	.\EDAMTest.py	/^import evernote.edam.userstore.UserStore as UserStore$/;"	i
edam	.\EDAMTest.py	/^import evernote.edam.userstore.constants as UserStoreConstants$/;"	i
edam	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.error.ttypes$/;"	i
edam	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.limits.ttypes$/;"	i
edam	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.type.ttypes$/;"	i
edam	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.userstore.ttypes$/;"	i
edam	.\evernote\edam\type\ttypes.py	/^import evernote.edam.limits.ttypes$/;"	i
edam	.\evernote\edam\userstore\ttypes.py	/^import evernote.edam.error.ttypes$/;"	i
edam	.\evernote\edam\userstore\ttypes.py	/^import evernote.edam.type.ttypes$/;"	i
element_type	.\thrift\protocol\fastbinary.c	/^  TType element_type;$/;"	m	struct:__anon1	file:
emailNote	.\evernote\edam\notestore\NoteStore.py	/^  def emailNote(self, authenticationToken, parameters):$/;"	m	class:Client
emailNote	.\evernote\edam\notestore\NoteStore.py	/^  def emailNote(self, authenticationToken, parameters):$/;"	m	class:Iface
emailNote_args	.\evernote\edam\notestore\NoteStore.py	/^class emailNote_args(object):$/;"	c
emailNote_result	.\evernote\edam\notestore\NoteStore.py	/^class emailNote_result(object):$/;"	c
encode_binary	.\thrift\protocol\fastbinary.c	/^encode_binary(PyObject *self, PyObject *args) {$/;"	f	file:
errno	.\thrift\transport\TSocket.py	/^import errno$/;"	i
error	.\EDAMTest.py	/^import evernote.edam.error.ttypes as Errors$/;"	i
error	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.error.ttypes$/;"	i
error	.\evernote\edam\userstore\ttypes.py	/^import evernote.edam.error.ttypes$/;"	i
errorCode	.\EDAMTest.py	/^    errorCode = e.errorCode$/;"	v
errorText	.\EDAMTest.py	/^    errorText = Errors.EDAMErrorCode._VALUES_TO_NAMES[errorCode]$/;"	v
evernote	.\EDAMTest.py	/^import evernote.edam.error.ttypes as Errors$/;"	i
evernote	.\EDAMTest.py	/^import evernote.edam.notestore.NoteStore as NoteStore$/;"	i
evernote	.\EDAMTest.py	/^import evernote.edam.type.ttypes as Types$/;"	i
evernote	.\EDAMTest.py	/^import evernote.edam.userstore.UserStore as UserStore$/;"	i
evernote	.\EDAMTest.py	/^import evernote.edam.userstore.constants as UserStoreConstants$/;"	i
evernote	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.error.ttypes$/;"	i
evernote	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.limits.ttypes$/;"	i
evernote	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.type.ttypes$/;"	i
evernote	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.userstore.ttypes$/;"	i
evernote	.\evernote\edam\type\ttypes.py	/^import evernote.edam.limits.ttypes$/;"	i
evernote	.\evernote\edam\userstore\ttypes.py	/^import evernote.edam.error.ttypes$/;"	i
evernote	.\evernote\edam\userstore\ttypes.py	/^import evernote.edam.type.ttypes$/;"	i
evernoteHost	.\EDAMTest.py	/^evernoteHost = "sandbox.evernote.com"$/;"	v
expungeInactiveNotes	.\evernote\edam\notestore\NoteStore.py	/^  def expungeInactiveNotes(self, authenticationToken):$/;"	m	class:Client
expungeInactiveNotes	.\evernote\edam\notestore\NoteStore.py	/^  def expungeInactiveNotes(self, authenticationToken):$/;"	m	class:Iface
expungeInactiveNotes_args	.\evernote\edam\notestore\NoteStore.py	/^class expungeInactiveNotes_args(object):$/;"	c
expungeInactiveNotes_result	.\evernote\edam\notestore\NoteStore.py	/^class expungeInactiveNotes_result(object):$/;"	c
expungeLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def expungeLinkedNotebook(self, authenticationToken, guid):$/;"	m	class:Client
expungeLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def expungeLinkedNotebook(self, authenticationToken, guid):$/;"	m	class:Iface
expungeLinkedNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class expungeLinkedNotebook_args(object):$/;"	c
expungeLinkedNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class expungeLinkedNotebook_result(object):$/;"	c
expungeNote	.\evernote\edam\notestore\NoteStore.py	/^  def expungeNote(self, authenticationToken, guid):$/;"	m	class:Client
expungeNote	.\evernote\edam\notestore\NoteStore.py	/^  def expungeNote(self, authenticationToken, guid):$/;"	m	class:Iface
expungeNote_args	.\evernote\edam\notestore\NoteStore.py	/^class expungeNote_args(object):$/;"	c
expungeNote_result	.\evernote\edam\notestore\NoteStore.py	/^class expungeNote_result(object):$/;"	c
expungeNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def expungeNotebook(self, authenticationToken, guid):$/;"	m	class:Client
expungeNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def expungeNotebook(self, authenticationToken, guid):$/;"	m	class:Iface
expungeNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class expungeNotebook_args(object):$/;"	c
expungeNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class expungeNotebook_result(object):$/;"	c
expungeNotes	.\evernote\edam\notestore\NoteStore.py	/^  def expungeNotes(self, authenticationToken, noteGuids):$/;"	m	class:Client
expungeNotes	.\evernote\edam\notestore\NoteStore.py	/^  def expungeNotes(self, authenticationToken, noteGuids):$/;"	m	class:Iface
expungeNotes_args	.\evernote\edam\notestore\NoteStore.py	/^class expungeNotes_args(object):$/;"	c
expungeNotes_result	.\evernote\edam\notestore\NoteStore.py	/^class expungeNotes_result(object):$/;"	c
expungeSearch	.\evernote\edam\notestore\NoteStore.py	/^  def expungeSearch(self, authenticationToken, guid):$/;"	m	class:Client
expungeSearch	.\evernote\edam\notestore\NoteStore.py	/^  def expungeSearch(self, authenticationToken, guid):$/;"	m	class:Iface
expungeSearch_args	.\evernote\edam\notestore\NoteStore.py	/^class expungeSearch_args(object):$/;"	c
expungeSearch_result	.\evernote\edam\notestore\NoteStore.py	/^class expungeSearch_result(object):$/;"	c
expungeSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def expungeSharedNotebooks(self, authenticationToken, sharedNotebookIds):$/;"	m	class:Client
expungeSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def expungeSharedNotebooks(self, authenticationToken, sharedNotebookIds):$/;"	m	class:Iface
expungeSharedNotebooks_args	.\evernote\edam\notestore\NoteStore.py	/^class expungeSharedNotebooks_args(object):$/;"	c
expungeSharedNotebooks_result	.\evernote\edam\notestore\NoteStore.py	/^class expungeSharedNotebooks_result(object):$/;"	c
expungeTag	.\evernote\edam\notestore\NoteStore.py	/^  def expungeTag(self, authenticationToken, guid):$/;"	m	class:Client
expungeTag	.\evernote\edam\notestore\NoteStore.py	/^  def expungeTag(self, authenticationToken, guid):$/;"	m	class:Iface
expungeTag_args	.\evernote\edam\notestore\NoteStore.py	/^class expungeTag_args(object):$/;"	c
expungeTag_result	.\evernote\edam\notestore\NoteStore.py	/^class expungeTag_result(object):$/;"	c
fastbinary	.\evernote\edam\error\ttypes.py	/^  fastbinary = None$/;"	v
fastbinary	.\evernote\edam\error\ttypes.py	/^  from thrift.protocol import fastbinary$/;"	i
fastbinary	.\evernote\edam\limits\ttypes.py	/^  fastbinary = None$/;"	v
fastbinary	.\evernote\edam\limits\ttypes.py	/^  from thrift.protocol import fastbinary$/;"	i
fastbinary	.\evernote\edam\notestore\NoteStore.py	/^  fastbinary = None$/;"	v
fastbinary	.\evernote\edam\notestore\NoteStore.py	/^  from thrift.protocol import fastbinary$/;"	i
fastbinary	.\evernote\edam\notestore\ttypes.py	/^  fastbinary = None$/;"	v
fastbinary	.\evernote\edam\notestore\ttypes.py	/^  from thrift.protocol import fastbinary$/;"	i
fastbinary	.\evernote\edam\type\ttypes.py	/^  fastbinary = None$/;"	v
fastbinary	.\evernote\edam\type\ttypes.py	/^  from thrift.protocol import fastbinary$/;"	i
fastbinary	.\evernote\edam\userstore\UserStore.py	/^  fastbinary = None$/;"	v
fastbinary	.\evernote\edam\userstore\UserStore.py	/^  from thrift.protocol import fastbinary$/;"	i
fastbinary	.\evernote\edam\userstore\ttypes.py	/^  fastbinary = None$/;"	v
fastbinary	.\evernote\edam\userstore\ttypes.py	/^  from thrift.protocol import fastbinary$/;"	i
fileno	.\thrift\server\TNonblockingServer.py	/^    def fileno(self):$/;"	m	class:Connection
findNoteCounts	.\evernote\edam\notestore\NoteStore.py	/^  def findNoteCounts(self, authenticationToken, filter, withTrash):$/;"	m	class:Client
findNoteCounts	.\evernote\edam\notestore\NoteStore.py	/^  def findNoteCounts(self, authenticationToken, filter, withTrash):$/;"	m	class:Iface
findNoteCounts_args	.\evernote\edam\notestore\NoteStore.py	/^class findNoteCounts_args(object):$/;"	c
findNoteCounts_result	.\evernote\edam\notestore\NoteStore.py	/^class findNoteCounts_result(object):$/;"	c
findNoteOffset	.\evernote\edam\notestore\NoteStore.py	/^  def findNoteOffset(self, authenticationToken, filter, guid):$/;"	m	class:Client
findNoteOffset	.\evernote\edam\notestore\NoteStore.py	/^  def findNoteOffset(self, authenticationToken, filter, guid):$/;"	m	class:Iface
findNoteOffset_args	.\evernote\edam\notestore\NoteStore.py	/^class findNoteOffset_args(object):$/;"	c
findNoteOffset_result	.\evernote\edam\notestore\NoteStore.py	/^class findNoteOffset_result(object):$/;"	c
findNotes	.\evernote\edam\notestore\NoteStore.py	/^  def findNotes(self, authenticationToken, filter, offset, maxNotes):$/;"	m	class:Client
findNotes	.\evernote\edam\notestore\NoteStore.py	/^  def findNotes(self, authenticationToken, filter, offset, maxNotes):$/;"	m	class:Iface
findNotesMetadata	.\evernote\edam\notestore\NoteStore.py	/^  def findNotesMetadata(self, authenticationToken, filter, offset, maxNotes, resultSpec):$/;"	m	class:Client
findNotesMetadata	.\evernote\edam\notestore\NoteStore.py	/^  def findNotesMetadata(self, authenticationToken, filter, offset, maxNotes, resultSpec):$/;"	m	class:Iface
findNotesMetadata_args	.\evernote\edam\notestore\NoteStore.py	/^class findNotesMetadata_args(object):$/;"	c
findNotesMetadata_result	.\evernote\edam\notestore\NoteStore.py	/^class findNotesMetadata_result(object):$/;"	c
findNotes_args	.\evernote\edam\notestore\NoteStore.py	/^class findNotes_args(object):$/;"	c
findNotes_result	.\evernote\edam\notestore\NoteStore.py	/^class findNotes_result(object):$/;"	c
flush	.\thrift\transport\THttpClient.py	/^  def flush(self):$/;"	m	class:THttpClient
flush	.\thrift\transport\TSocket.py	/^  def flush(self):$/;"	m	class:TSocket
flush	.\thrift\transport\TTransport.py	/^  def flush(self):$/;"	m	class:TBufferedTransport
flush	.\thrift\transport\TTransport.py	/^  def flush(self):$/;"	m	class:TFileObjectTransport
flush	.\thrift\transport\TTransport.py	/^  def flush(self):$/;"	m	class:TFramedTransport
flush	.\thrift\transport\TTransport.py	/^  def flush(self):$/;"	m	class:TMemoryBuffer
flush	.\thrift\transport\TTransport.py	/^  def flush(self):$/;"	m	class:TTransportBase
flush	.\thrift\transport\TTwisted.py	/^    def flush(self):$/;"	m	class:TMessageSenderTransport
free_decodebuf	.\thrift\protocol\fastbinary.c	/^free_decodebuf(DecodeBuffer* d) {$/;"	f	file:
gen_cpp	.\thrift\TSCons.py	/^def gen_cpp(env, dir, file):$/;"	f
getAccountSize	.\evernote\edam\notestore\NoteStore.py	/^  def getAccountSize(self, authenticationToken):$/;"	m	class:Client
getAccountSize	.\evernote\edam\notestore\NoteStore.py	/^  def getAccountSize(self, authenticationToken):$/;"	m	class:Iface
getAccountSize_args	.\evernote\edam\notestore\NoteStore.py	/^class getAccountSize_args(object):$/;"	c
getAccountSize_result	.\evernote\edam\notestore\NoteStore.py	/^class getAccountSize_result(object):$/;"	c
getAds	.\evernote\edam\notestore\NoteStore.py	/^  def getAds(self, authenticationToken, adParameters):$/;"	m	class:Client
getAds	.\evernote\edam\notestore\NoteStore.py	/^  def getAds(self, authenticationToken, adParameters):$/;"	m	class:Iface
getAds_args	.\evernote\edam\notestore\NoteStore.py	/^class getAds_args(object):$/;"	c
getAds_result	.\evernote\edam\notestore\NoteStore.py	/^class getAds_result(object):$/;"	c
getChild	.\thrift\transport\TTwisted.py	/^    def getChild(self, path, request):$/;"	m	class:ThriftResource
getDefaultNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def getDefaultNotebook(self, authenticationToken):$/;"	m	class:Client
getDefaultNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def getDefaultNotebook(self, authenticationToken):$/;"	m	class:Iface
getDefaultNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class getDefaultNotebook_args(object):$/;"	c
getDefaultNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class getDefaultNotebook_result(object):$/;"	c
getLinkedNotebookSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def getLinkedNotebookSyncChunk(self, authenticationToken, linkedNotebook, afterUSN, maxEntries, fullSyncOnly):$/;"	m	class:Client
getLinkedNotebookSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def getLinkedNotebookSyncChunk(self, authenticationToken, linkedNotebook, afterUSN, maxEntries, fullSyncOnly):$/;"	m	class:Iface
getLinkedNotebookSyncChunk_args	.\evernote\edam\notestore\NoteStore.py	/^class getLinkedNotebookSyncChunk_args(object):$/;"	c
getLinkedNotebookSyncChunk_result	.\evernote\edam\notestore\NoteStore.py	/^class getLinkedNotebookSyncChunk_result(object):$/;"	c
getLinkedNotebookSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def getLinkedNotebookSyncState(self, authenticationToken, linkedNotebook):$/;"	m	class:Client
getLinkedNotebookSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def getLinkedNotebookSyncState(self, authenticationToken, linkedNotebook):$/;"	m	class:Iface
getLinkedNotebookSyncState_args	.\evernote\edam\notestore\NoteStore.py	/^class getLinkedNotebookSyncState_args(object):$/;"	c
getLinkedNotebookSyncState_result	.\evernote\edam\notestore\NoteStore.py	/^class getLinkedNotebookSyncState_result(object):$/;"	c
getNote	.\evernote\edam\notestore\NoteStore.py	/^  def getNote(self, authenticationToken, guid, withContent, withResourcesData, withResourcesRecognition, withResourcesAlternateData):$/;"	m	class:Client
getNote	.\evernote\edam\notestore\NoteStore.py	/^  def getNote(self, authenticationToken, guid, withContent, withResourcesData, withResourcesRecognition, withResourcesAlternateData):$/;"	m	class:Iface
getNoteContent	.\evernote\edam\notestore\NoteStore.py	/^  def getNoteContent(self, authenticationToken, guid):$/;"	m	class:Client
getNoteContent	.\evernote\edam\notestore\NoteStore.py	/^  def getNoteContent(self, authenticationToken, guid):$/;"	m	class:Iface
getNoteContent_args	.\evernote\edam\notestore\NoteStore.py	/^class getNoteContent_args(object):$/;"	c
getNoteContent_result	.\evernote\edam\notestore\NoteStore.py	/^class getNoteContent_result(object):$/;"	c
getNoteSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def getNoteSearchText(self, authenticationToken, guid, noteOnly, tokenizeForIndexing):$/;"	m	class:Client
getNoteSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def getNoteSearchText(self, authenticationToken, guid, noteOnly, tokenizeForIndexing):$/;"	m	class:Iface
getNoteSearchText_args	.\evernote\edam\notestore\NoteStore.py	/^class getNoteSearchText_args(object):$/;"	c
getNoteSearchText_result	.\evernote\edam\notestore\NoteStore.py	/^class getNoteSearchText_result(object):$/;"	c
getNoteTagNames	.\evernote\edam\notestore\NoteStore.py	/^  def getNoteTagNames(self, authenticationToken, guid):$/;"	m	class:Client
getNoteTagNames	.\evernote\edam\notestore\NoteStore.py	/^  def getNoteTagNames(self, authenticationToken, guid):$/;"	m	class:Iface
getNoteTagNames_args	.\evernote\edam\notestore\NoteStore.py	/^class getNoteTagNames_args(object):$/;"	c
getNoteTagNames_result	.\evernote\edam\notestore\NoteStore.py	/^class getNoteTagNames_result(object):$/;"	c
getNoteVersion	.\evernote\edam\notestore\NoteStore.py	/^  def getNoteVersion(self, authenticationToken, noteGuid, updateSequenceNum, withResourcesData, withResourcesRecognition, withResourcesAlternateData):$/;"	m	class:Client
getNoteVersion	.\evernote\edam\notestore\NoteStore.py	/^  def getNoteVersion(self, authenticationToken, noteGuid, updateSequenceNum, withResourcesData, withResourcesRecognition, withResourcesAlternateData):$/;"	m	class:Iface
getNoteVersion_args	.\evernote\edam\notestore\NoteStore.py	/^class getNoteVersion_args(object):$/;"	c
getNoteVersion_result	.\evernote\edam\notestore\NoteStore.py	/^class getNoteVersion_result(object):$/;"	c
getNote_args	.\evernote\edam\notestore\NoteStore.py	/^class getNote_args(object):$/;"	c
getNote_result	.\evernote\edam\notestore\NoteStore.py	/^class getNote_result(object):$/;"	c
getNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def getNotebook(self, authenticationToken, guid):$/;"	m	class:Client
getNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def getNotebook(self, authenticationToken, guid):$/;"	m	class:Iface
getNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class getNotebook_args(object):$/;"	c
getNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class getNotebook_result(object):$/;"	c
getProtocol	.\thrift\protocol\TBinaryProtocol.py	/^  def getProtocol(self, trans):$/;"	m	class:TBinaryProtocolAcceleratedFactory
getProtocol	.\thrift\protocol\TBinaryProtocol.py	/^  def getProtocol(self, trans):$/;"	m	class:TBinaryProtocolFactory
getProtocol	.\thrift\protocol\TProtocol.py	/^  def getProtocol(self, trans):$/;"	m	class:TProtocolFactory
getPublicNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def getPublicNotebook(self, userId, publicUri):$/;"	m	class:Client
getPublicNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def getPublicNotebook(self, userId, publicUri):$/;"	m	class:Iface
getPublicNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class getPublicNotebook_args(object):$/;"	c
getPublicNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class getPublicNotebook_result(object):$/;"	c
getPublicUserInfo	.\evernote\edam\userstore\UserStore.py	/^  def getPublicUserInfo(self, username):$/;"	m	class:Client
getPublicUserInfo	.\evernote\edam\userstore\UserStore.py	/^  def getPublicUserInfo(self, username):$/;"	m	class:Iface
getPublicUserInfo_args	.\evernote\edam\userstore\UserStore.py	/^class getPublicUserInfo_args(object):$/;"	c
getPublicUserInfo_result	.\evernote\edam\userstore\UserStore.py	/^class getPublicUserInfo_result(object):$/;"	c
getRandomAd	.\evernote\edam\notestore\NoteStore.py	/^  def getRandomAd(self, authenticationToken, adParameters):$/;"	m	class:Client
getRandomAd	.\evernote\edam\notestore\NoteStore.py	/^  def getRandomAd(self, authenticationToken, adParameters):$/;"	m	class:Iface
getRandomAd_args	.\evernote\edam\notestore\NoteStore.py	/^class getRandomAd_args(object):$/;"	c
getRandomAd_result	.\evernote\edam\notestore\NoteStore.py	/^class getRandomAd_result(object):$/;"	c
getResource	.\evernote\edam\notestore\NoteStore.py	/^  def getResource(self, authenticationToken, guid, withData, withRecognition, withAttributes, withAlternateData):$/;"	m	class:Client
getResource	.\evernote\edam\notestore\NoteStore.py	/^  def getResource(self, authenticationToken, guid, withData, withRecognition, withAttributes, withAlternateData):$/;"	m	class:Iface
getResourceAlternateData	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceAlternateData(self, authenticationToken, guid):$/;"	m	class:Client
getResourceAlternateData	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceAlternateData(self, authenticationToken, guid):$/;"	m	class:Iface
getResourceAlternateData_args	.\evernote\edam\notestore\NoteStore.py	/^class getResourceAlternateData_args(object):$/;"	c
getResourceAlternateData_result	.\evernote\edam\notestore\NoteStore.py	/^class getResourceAlternateData_result(object):$/;"	c
getResourceAttributes	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceAttributes(self, authenticationToken, guid):$/;"	m	class:Client
getResourceAttributes	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceAttributes(self, authenticationToken, guid):$/;"	m	class:Iface
getResourceAttributes_args	.\evernote\edam\notestore\NoteStore.py	/^class getResourceAttributes_args(object):$/;"	c
getResourceAttributes_result	.\evernote\edam\notestore\NoteStore.py	/^class getResourceAttributes_result(object):$/;"	c
getResourceByHash	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceByHash(self, authenticationToken, noteGuid, contentHash, withData, withRecognition, withAlternateData):$/;"	m	class:Client
getResourceByHash	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceByHash(self, authenticationToken, noteGuid, contentHash, withData, withRecognition, withAlternateData):$/;"	m	class:Iface
getResourceByHash_args	.\evernote\edam\notestore\NoteStore.py	/^class getResourceByHash_args(object):$/;"	c
getResourceByHash_result	.\evernote\edam\notestore\NoteStore.py	/^class getResourceByHash_result(object):$/;"	c
getResourceData	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceData(self, authenticationToken, guid):$/;"	m	class:Client
getResourceData	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceData(self, authenticationToken, guid):$/;"	m	class:Iface
getResourceData_args	.\evernote\edam\notestore\NoteStore.py	/^class getResourceData_args(object):$/;"	c
getResourceData_result	.\evernote\edam\notestore\NoteStore.py	/^class getResourceData_result(object):$/;"	c
getResourceRecognition	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceRecognition(self, authenticationToken, guid):$/;"	m	class:Client
getResourceRecognition	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceRecognition(self, authenticationToken, guid):$/;"	m	class:Iface
getResourceRecognition_args	.\evernote\edam\notestore\NoteStore.py	/^class getResourceRecognition_args(object):$/;"	c
getResourceRecognition_result	.\evernote\edam\notestore\NoteStore.py	/^class getResourceRecognition_result(object):$/;"	c
getResourceSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceSearchText(self, authenticationToken, guid):$/;"	m	class:Client
getResourceSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def getResourceSearchText(self, authenticationToken, guid):$/;"	m	class:Iface
getResourceSearchText_args	.\evernote\edam\notestore\NoteStore.py	/^class getResourceSearchText_args(object):$/;"	c
getResourceSearchText_result	.\evernote\edam\notestore\NoteStore.py	/^class getResourceSearchText_result(object):$/;"	c
getResource_args	.\evernote\edam\notestore\NoteStore.py	/^class getResource_args(object):$/;"	c
getResource_result	.\evernote\edam\notestore\NoteStore.py	/^class getResource_result(object):$/;"	c
getSearch	.\evernote\edam\notestore\NoteStore.py	/^  def getSearch(self, authenticationToken, guid):$/;"	m	class:Client
getSearch	.\evernote\edam\notestore\NoteStore.py	/^  def getSearch(self, authenticationToken, guid):$/;"	m	class:Iface
getSearch_args	.\evernote\edam\notestore\NoteStore.py	/^class getSearch_args(object):$/;"	c
getSearch_result	.\evernote\edam\notestore\NoteStore.py	/^class getSearch_result(object):$/;"	c
getSharedNotebookByAuth	.\evernote\edam\notestore\NoteStore.py	/^  def getSharedNotebookByAuth(self, authenticationToken):$/;"	m	class:Client
getSharedNotebookByAuth	.\evernote\edam\notestore\NoteStore.py	/^  def getSharedNotebookByAuth(self, authenticationToken):$/;"	m	class:Iface
getSharedNotebookByAuth_args	.\evernote\edam\notestore\NoteStore.py	/^class getSharedNotebookByAuth_args(object):$/;"	c
getSharedNotebookByAuth_result	.\evernote\edam\notestore\NoteStore.py	/^class getSharedNotebookByAuth_result(object):$/;"	c
getSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def getSyncChunk(self, authenticationToken, afterUSN, maxEntries, fullSyncOnly):$/;"	m	class:Client
getSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def getSyncChunk(self, authenticationToken, afterUSN, maxEntries, fullSyncOnly):$/;"	m	class:Iface
getSyncChunk_args	.\evernote\edam\notestore\NoteStore.py	/^class getSyncChunk_args(object):$/;"	c
getSyncChunk_result	.\evernote\edam\notestore\NoteStore.py	/^class getSyncChunk_result(object):$/;"	c
getSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def getSyncState(self, authenticationToken):$/;"	m	class:Client
getSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def getSyncState(self, authenticationToken):$/;"	m	class:Iface
getSyncState_args	.\evernote\edam\notestore\NoteStore.py	/^class getSyncState_args(object):$/;"	c
getSyncState_result	.\evernote\edam\notestore\NoteStore.py	/^class getSyncState_result(object):$/;"	c
getTag	.\evernote\edam\notestore\NoteStore.py	/^  def getTag(self, authenticationToken, guid):$/;"	m	class:Client
getTag	.\evernote\edam\notestore\NoteStore.py	/^  def getTag(self, authenticationToken, guid):$/;"	m	class:Iface
getTag_args	.\evernote\edam\notestore\NoteStore.py	/^class getTag_args(object):$/;"	c
getTag_result	.\evernote\edam\notestore\NoteStore.py	/^class getTag_result(object):$/;"	c
getTransport	.\thrift\transport\TTransport.py	/^  def getTransport(self, trans):$/;"	m	class:TBufferedTransportFactory
getTransport	.\thrift\transport\TTransport.py	/^  def getTransport(self, trans):$/;"	m	class:TFramedTransportFactory
getTransport	.\thrift\transport\TTransport.py	/^  def getTransport(self, trans):$/;"	m	class:TTransportFactoryBase
getUser	.\evernote\edam\userstore\UserStore.py	/^  def getUser(self, authenticationToken):$/;"	m	class:Client
getUser	.\evernote\edam\userstore\UserStore.py	/^  def getUser(self, authenticationToken):$/;"	m	class:Iface
getUser_args	.\evernote\edam\userstore\UserStore.py	/^class getUser_args(object):$/;"	c
getUser_result	.\evernote\edam\userstore\UserStore.py	/^class getUser_result(object):$/;"	c
getvalue	.\thrift\transport\TTransport.py	/^  def getvalue(self):$/;"	m	class:TMemoryBuffer
handle	.\thrift\server\TNonblockingServer.py	/^    def handle(self):$/;"	m	class:TNonblockingServer
handle	.\thrift\server\TServer.py	/^  def handle(self, client):$/;"	m	class:TThreadedServer
hash	.\EDAMTest.py	/^hash = md5.digest()$/;"	v
hashHex	.\EDAMTest.py	/^hashHex = binascii.hexlify(hash)$/;"	v
hashlib	.\EDAMTest.py	/^import hashlib$/;"	i
htonll	.\thrift\protocol\fastbinary.c	100;"	d	file:
htonll	.\thrift\protocol\fastbinary.c	92;"	d	file:
htonll	.\thrift\protocol\fastbinary.c	97;"	d	file:
http	.\thrift\transport\TTwisted.py	/^from twisted.web import server, resource, http$/;"	i
httplib	.\thrift\transport\THttpClient.py	/^import httplib$/;"	i
image	.\EDAMTest.py	/^image = open('enlogo.png', 'rb').read()$/;"	v
implements	.\thrift\transport\TTwisted.py	/^from zope.interface import implements, Interface, Attribute$/;"	i
initfastbinary	.\thrift\protocol\fastbinary.c	/^initfastbinary(void) {$/;"	f
iprot_factory	.\thrift\transport\TTwisted.py	/^    iprot_factory = Attribute("Input protocol factory")$/;"	v	class:IThriftClientFactory
iprot_factory	.\thrift\transport\TTwisted.py	/^    iprot_factory = Attribute("Input protocol factory")$/;"	v	class:IThriftServerFactory
isOpen	.\thrift\transport\THttpClient.py	/^  def isOpen(self):$/;"	m	class:THttpClient
isOpen	.\thrift\transport\TSocket.py	/^  def isOpen(self):$/;"	m	class:TSocket
isOpen	.\thrift\transport\TTransport.py	/^  def isOpen(self):$/;"	m	class:TBufferedTransport
isOpen	.\thrift\transport\TTransport.py	/^  def isOpen(self):$/;"	m	class:TFileObjectTransport
isOpen	.\thrift\transport\TTransport.py	/^  def isOpen(self):$/;"	m	class:TFramedTransport
isOpen	.\thrift\transport\TTransport.py	/^  def isOpen(self):$/;"	m	class:TMemoryBuffer
isOpen	.\thrift\transport\TTransport.py	/^  def isOpen(self):$/;"	m	class:TTransportBase
is_closed	.\thrift\server\TNonblockingServer.py	/^    def is_closed(self):$/;"	m	class:Connection
is_readable	.\thrift\server\TNonblockingServer.py	/^    def is_readable(self):$/;"	m	class:Connection
is_writeable	.\thrift\server\TNonblockingServer.py	/^    def is_writeable(self):$/;"	m	class:Connection
klass	.\thrift\protocol\fastbinary.c	/^  PyObject* klass;$/;"	m	struct:__anon3	file:
ktag	.\thrift\protocol\fastbinary.c	/^  TType ktag;$/;"	m	struct:__anon2	file:
ktypeargs	.\thrift\protocol\fastbinary.c	/^  PyObject* ktypeargs;$/;"	m	struct:__anon2	file:
limits	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.limits.ttypes$/;"	i
limits	.\evernote\edam\type\ttypes.py	/^import evernote.edam.limits.ttypes$/;"	i
listLinkedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def listLinkedNotebooks(self, authenticationToken):$/;"	m	class:Client
listLinkedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def listLinkedNotebooks(self, authenticationToken):$/;"	m	class:Iface
listLinkedNotebooks_args	.\evernote\edam\notestore\NoteStore.py	/^class listLinkedNotebooks_args(object):$/;"	c
listLinkedNotebooks_result	.\evernote\edam\notestore\NoteStore.py	/^class listLinkedNotebooks_result(object):$/;"	c
listNoteVersions	.\evernote\edam\notestore\NoteStore.py	/^  def listNoteVersions(self, authenticationToken, noteGuid):$/;"	m	class:Client
listNoteVersions	.\evernote\edam\notestore\NoteStore.py	/^  def listNoteVersions(self, authenticationToken, noteGuid):$/;"	m	class:Iface
listNoteVersions_args	.\evernote\edam\notestore\NoteStore.py	/^class listNoteVersions_args(object):$/;"	c
listNoteVersions_result	.\evernote\edam\notestore\NoteStore.py	/^class listNoteVersions_result(object):$/;"	c
listNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def listNotebooks(self, authenticationToken):$/;"	m	class:Client
listNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def listNotebooks(self, authenticationToken):$/;"	m	class:Iface
listNotebooks_args	.\evernote\edam\notestore\NoteStore.py	/^class listNotebooks_args(object):$/;"	c
listNotebooks_result	.\evernote\edam\notestore\NoteStore.py	/^class listNotebooks_result(object):$/;"	c
listSearches	.\evernote\edam\notestore\NoteStore.py	/^  def listSearches(self, authenticationToken):$/;"	m	class:Client
listSearches	.\evernote\edam\notestore\NoteStore.py	/^  def listSearches(self, authenticationToken):$/;"	m	class:Iface
listSearches_args	.\evernote\edam\notestore\NoteStore.py	/^class listSearches_args(object):$/;"	c
listSearches_result	.\evernote\edam\notestore\NoteStore.py	/^class listSearches_result(object):$/;"	c
listSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def listSharedNotebooks(self, authenticationToken):$/;"	m	class:Client
listSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def listSharedNotebooks(self, authenticationToken):$/;"	m	class:Iface
listSharedNotebooks_args	.\evernote\edam\notestore\NoteStore.py	/^class listSharedNotebooks_args(object):$/;"	c
listSharedNotebooks_result	.\evernote\edam\notestore\NoteStore.py	/^class listSharedNotebooks_result(object):$/;"	c
listTags	.\evernote\edam\notestore\NoteStore.py	/^  def listTags(self, authenticationToken):$/;"	m	class:Client
listTags	.\evernote\edam\notestore\NoteStore.py	/^  def listTags(self, authenticationToken):$/;"	m	class:Iface
listTagsByNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def listTagsByNotebook(self, authenticationToken, notebookGuid):$/;"	m	class:Client
listTagsByNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def listTagsByNotebook(self, authenticationToken, notebookGuid):$/;"	m	class:Iface
listTagsByNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class listTagsByNotebook_args(object):$/;"	c
listTagsByNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class listTagsByNotebook_result(object):$/;"	c
listTags_args	.\evernote\edam\notestore\NoteStore.py	/^class listTags_args(object):$/;"	c
listTags_result	.\evernote\edam\notestore\NoteStore.py	/^class listTags_result(object):$/;"	c
listen	.\thrift\transport\TSocket.py	/^  def listen(self):$/;"	m	class:TServerSocket
listen	.\thrift\transport\TTransport.py	/^  def listen(self):$/;"	m	class:TServerTransportBase
locked	.\thrift\server\TNonblockingServer.py	/^def locked(func):$/;"	f
log	.\thrift\transport\TTwisted.py	/^from twisted.python import log$/;"	i
logging	.\thrift\server\TNonblockingServer.py	/^import logging$/;"	i
logging	.\thrift\server\TServer.py	/^import logging$/;"	i
md5	.\EDAMTest.py	/^md5 = hashlib.md5()$/;"	v
message	.\thrift\Thrift.py	/^    message = property(_get_message, _set_message)$/;"	v	class:TException
nested	.\thrift\server\TNonblockingServer.py	/^    def nested(self, *args, **kwargs):$/;"	f	function:locked
note	.\EDAMTest.py	/^note = Types.Note()$/;"	v
noteStore	.\EDAMTest.py	/^noteStore = NoteStore.Client(noteStoreProtocol)$/;"	v
noteStoreHttpClient	.\EDAMTest.py	/^noteStoreHttpClient = THttpClient.THttpClient(noteStoreUri)$/;"	v
noteStoreProtocol	.\EDAMTest.py	/^noteStoreProtocol = TBinaryProtocol.TBinaryProtocol(noteStoreHttpClient)$/;"	v
noteStoreUri	.\EDAMTest.py	/^noteStoreUri =  noteStoreUriBase + user.shardId$/;"	v
noteStoreUriBase	.\EDAMTest.py	/^noteStoreUriBase = "https:\/\/" + evernoteHost + "\/edam\/note\/"$/;"	v
notebooks	.\EDAMTest.py	/^notebooks = noteStore.listNotebooks(authToken)$/;"	v
notestore	.\EDAMTest.py	/^import evernote.edam.notestore.NoteStore as NoteStore$/;"	i
ntohll	.\thrift\protocol\fastbinary.c	91;"	d	file:
ntohll	.\thrift\protocol\fastbinary.c	96;"	d	file:
ntohll	.\thrift\protocol\fastbinary.c	99;"	d	file:
open	.\thrift\transport\THttpClient.py	/^  def open(self):$/;"	m	class:THttpClient
open	.\thrift\transport\TSocket.py	/^  def open(self):$/;"	m	class:TSocket
open	.\thrift\transport\TTransport.py	/^  def open(self):$/;"	m	class:TBufferedTransport
open	.\thrift\transport\TTransport.py	/^  def open(self):$/;"	m	class:TFramedTransport
open	.\thrift\transport\TTransport.py	/^  def open(self):$/;"	m	class:TMemoryBuffer
open	.\thrift\transport\TTransport.py	/^  def open(self):$/;"	m	class:TTransportBase
oprot_factory	.\thrift\transport\TTwisted.py	/^    oprot_factory = Attribute("Output protocol factory")$/;"	v	class:IThriftClientFactory
oprot_factory	.\thrift\transport\TTwisted.py	/^    oprot_factory = Attribute("Output protocol factory")$/;"	v	class:IThriftServerFactory
os	.\thrift\server\TServer.py	/^import os$/;"	i
os	.\thrift\transport\TSocket.py	/^import os$/;"	i
output_val	.\thrift\protocol\fastbinary.c	/^output_val(PyObject* output, PyObject* value, TType type, PyObject* typeargs) {$/;"	f	file:
pack	.\thrift\protocol\TBinaryProtocol.py	/^from struct import pack, unpack$/;"	i
pack	.\thrift\transport\TTransport.py	/^from struct import pack,unpack$/;"	i
parameter	.\EDAMTest.py	/^    parameter = e.parameter$/;"	v
parse_map_args	.\thrift\protocol\fastbinary.c	/^parse_map_args(MapTypeArgs* dest, PyObject* typeargs) {$/;"	f	file:
parse_pyint	.\thrift\protocol\fastbinary.c	/^parse_pyint(PyObject* o, int32_t* ret, int32_t min, int32_t max) {$/;"	f	file:
parse_set_list_args	.\thrift\protocol\fastbinary.c	/^parse_set_list_args(SetListTypeArgs* dest, PyObject* typeargs) {$/;"	f	file:
parse_struct_args	.\thrift\protocol\fastbinary.c	/^parse_struct_args(StructTypeArgs* dest, PyObject* typeargs) {$/;"	f	file:
parse_struct_item_spec	.\thrift\protocol\fastbinary.c	/^parse_struct_item_spec(StructItemSpec* dest, PyObject* spec_tuple) {$/;"	f	file:
password	.\EDAMTest.py	/^password = sys.argv[2]$/;"	v
path	.\thrift\TSCons.py	/^from os import path$/;"	i
prepare	.\thrift\server\TNonblockingServer.py	/^    def prepare(self):$/;"	m	class:TNonblockingServer
process	.\evernote\edam\notestore\NoteStore.py	/^  def process(self, iprot, oprot):$/;"	m	class:Processor
process	.\evernote\edam\userstore\UserStore.py	/^  def process(self, iprot, oprot):$/;"	m	class:Processor
process	.\thrift\Thrift.py	/^  def process(iprot, oprot):$/;"	m	class:TProcessor
processError	.\thrift\transport\TTwisted.py	/^    def processError(self, error):$/;"	m	class:ThriftServerProtocol
processOk	.\thrift\transport\TTwisted.py	/^    def processOk(self, _, tmo):$/;"	m	class:ThriftServerProtocol
process_authenticate	.\evernote\edam\userstore\UserStore.py	/^  def process_authenticate(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_authenticateToSharedNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_authenticateToSharedNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_authenticateToSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_authenticateToSharedNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_checkVersion	.\evernote\edam\userstore\UserStore.py	/^  def process_checkVersion(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_copyNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_copyNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_createLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_createLinkedNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_createNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_createNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_createNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_createNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_createSearch	.\evernote\edam\notestore\NoteStore.py	/^  def process_createSearch(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_createSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_createSharedNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_createTag	.\evernote\edam\notestore\NoteStore.py	/^  def process_createTag(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_deleteNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_deleteNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_emailNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_emailNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_expungeInactiveNotes	.\evernote\edam\notestore\NoteStore.py	/^  def process_expungeInactiveNotes(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_expungeLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_expungeLinkedNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_expungeNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_expungeNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_expungeNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_expungeNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_expungeNotes	.\evernote\edam\notestore\NoteStore.py	/^  def process_expungeNotes(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_expungeSearch	.\evernote\edam\notestore\NoteStore.py	/^  def process_expungeSearch(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_expungeSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def process_expungeSharedNotebooks(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_expungeTag	.\evernote\edam\notestore\NoteStore.py	/^  def process_expungeTag(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_findNoteCounts	.\evernote\edam\notestore\NoteStore.py	/^  def process_findNoteCounts(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_findNoteOffset	.\evernote\edam\notestore\NoteStore.py	/^  def process_findNoteOffset(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_findNotes	.\evernote\edam\notestore\NoteStore.py	/^  def process_findNotes(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_findNotesMetadata	.\evernote\edam\notestore\NoteStore.py	/^  def process_findNotesMetadata(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getAccountSize	.\evernote\edam\notestore\NoteStore.py	/^  def process_getAccountSize(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getAds	.\evernote\edam\notestore\NoteStore.py	/^  def process_getAds(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getDefaultNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_getDefaultNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getLinkedNotebookSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def process_getLinkedNotebookSyncChunk(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getLinkedNotebookSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def process_getLinkedNotebookSyncState(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_getNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getNoteContent	.\evernote\edam\notestore\NoteStore.py	/^  def process_getNoteContent(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getNoteSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def process_getNoteSearchText(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getNoteTagNames	.\evernote\edam\notestore\NoteStore.py	/^  def process_getNoteTagNames(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getNoteVersion	.\evernote\edam\notestore\NoteStore.py	/^  def process_getNoteVersion(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_getNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getPublicNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_getPublicNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getPublicUserInfo	.\evernote\edam\userstore\UserStore.py	/^  def process_getPublicUserInfo(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getRandomAd	.\evernote\edam\notestore\NoteStore.py	/^  def process_getRandomAd(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getResource	.\evernote\edam\notestore\NoteStore.py	/^  def process_getResource(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getResourceAlternateData	.\evernote\edam\notestore\NoteStore.py	/^  def process_getResourceAlternateData(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getResourceAttributes	.\evernote\edam\notestore\NoteStore.py	/^  def process_getResourceAttributes(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getResourceByHash	.\evernote\edam\notestore\NoteStore.py	/^  def process_getResourceByHash(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getResourceData	.\evernote\edam\notestore\NoteStore.py	/^  def process_getResourceData(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getResourceRecognition	.\evernote\edam\notestore\NoteStore.py	/^  def process_getResourceRecognition(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getResourceSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def process_getResourceSearchText(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getSearch	.\evernote\edam\notestore\NoteStore.py	/^  def process_getSearch(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getSharedNotebookByAuth	.\evernote\edam\notestore\NoteStore.py	/^  def process_getSharedNotebookByAuth(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def process_getSyncChunk(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def process_getSyncState(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getTag	.\evernote\edam\notestore\NoteStore.py	/^  def process_getTag(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_getUser	.\evernote\edam\userstore\UserStore.py	/^  def process_getUser(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_listLinkedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def process_listLinkedNotebooks(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_listNoteVersions	.\evernote\edam\notestore\NoteStore.py	/^  def process_listNoteVersions(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_listNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def process_listNotebooks(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_listSearches	.\evernote\edam\notestore\NoteStore.py	/^  def process_listSearches(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_listSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def process_listSharedNotebooks(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_listTags	.\evernote\edam\notestore\NoteStore.py	/^  def process_listTags(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_listTagsByNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_listTagsByNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_refreshAuthentication	.\evernote\edam\userstore\UserStore.py	/^  def process_refreshAuthentication(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_shareNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_shareNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_stopSharingNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_stopSharingNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_untagAll	.\evernote\edam\notestore\NoteStore.py	/^  def process_untagAll(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_updateLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_updateLinkedNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_updateNote	.\evernote\edam\notestore\NoteStore.py	/^  def process_updateNote(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_updateNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def process_updateNotebook(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_updateResource	.\evernote\edam\notestore\NoteStore.py	/^  def process_updateResource(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_updateSearch	.\evernote\edam\notestore\NoteStore.py	/^  def process_updateSearch(self, seqid, iprot, oprot):$/;"	m	class:Processor
process_updateTag	.\evernote\edam\notestore\NoteStore.py	/^  def process_updateTag(self, seqid, iprot, oprot):$/;"	m	class:Processor
processor	.\thrift\transport\TTwisted.py	/^    processor = Attribute("Thrift processor")$/;"	v	class:IThriftServerFactory
protocol	.\EDAMTest.py	/^import thrift.protocol.TBinaryProtocol as TBinaryProtocol$/;"	i
protocol	.\thrift\transport\TTwisted.py	/^    protocol = ThriftClientProtocol$/;"	v	class:ThriftClientFactory
protocol	.\thrift\transport\TTwisted.py	/^    protocol = ThriftServerProtocol$/;"	v	class:ThriftServerFactory
read	.\evernote\edam\error\ttypes.py	/^  def read(self, iprot):$/;"	m	class:EDAMNotFoundException
read	.\evernote\edam\error\ttypes.py	/^  def read(self, iprot):$/;"	m	class:EDAMSystemException
read	.\evernote\edam\error\ttypes.py	/^  def read(self, iprot):$/;"	m	class:EDAMUserException
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:authenticateToSharedNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:authenticateToSharedNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:authenticateToSharedNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:authenticateToSharedNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:copyNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:copyNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createLinkedNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createLinkedNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createSearch_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createSearch_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createSharedNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createSharedNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createTag_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:createTag_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:deleteNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:deleteNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:emailNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:emailNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeInactiveNotes_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeInactiveNotes_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeLinkedNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeLinkedNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeNotes_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeNotes_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeSearch_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeSearch_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeSharedNotebooks_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeSharedNotebooks_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeTag_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:expungeTag_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:findNoteCounts_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:findNoteCounts_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:findNoteOffset_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:findNoteOffset_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:findNotesMetadata_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:findNotesMetadata_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:findNotes_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:findNotes_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getAccountSize_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getAccountSize_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getAds_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getAds_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getDefaultNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getDefaultNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getLinkedNotebookSyncChunk_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getLinkedNotebookSyncChunk_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getLinkedNotebookSyncState_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getLinkedNotebookSyncState_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNoteContent_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNoteContent_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNoteSearchText_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNoteSearchText_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNoteTagNames_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNoteTagNames_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNoteVersion_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNoteVersion_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getPublicNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getPublicNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getRandomAd_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getRandomAd_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceAlternateData_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceAlternateData_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceAttributes_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceAttributes_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceByHash_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceByHash_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceData_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceData_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceRecognition_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceRecognition_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceSearchText_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResourceSearchText_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResource_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getResource_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getSearch_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getSearch_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getSharedNotebookByAuth_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getSharedNotebookByAuth_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getSyncChunk_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getSyncChunk_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getSyncState_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getSyncState_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getTag_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:getTag_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listLinkedNotebooks_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listLinkedNotebooks_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listNoteVersions_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listNoteVersions_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listNotebooks_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listNotebooks_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listSearches_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listSearches_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listSharedNotebooks_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listSharedNotebooks_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listTagsByNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listTagsByNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listTags_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:listTags_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:shareNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:shareNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:stopSharingNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:stopSharingNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:untagAll_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:untagAll_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateLinkedNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateLinkedNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateNote_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateNote_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateNotebook_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateNotebook_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateResource_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateResource_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateSearch_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateSearch_result
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateTag_args
read	.\evernote\edam\notestore\NoteStore.py	/^  def read(self, iprot):$/;"	m	class:updateTag_result
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:AdImpressions
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:AdParameters
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:NoteCollectionCounts
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:NoteEmailParameters
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:NoteFilter
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:NoteList
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:NoteMetadata
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:NoteVersionId
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:NotesMetadataList
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:NotesMetadataResultSpec
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:SyncChunk
read	.\evernote\edam\notestore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:SyncState
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:Accounting
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:Ad
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:Data
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:LinkedNotebook
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:Note
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:NoteAttributes
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:Notebook
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:Publishing
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:Resource
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:ResourceAttributes
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:SavedSearch
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:SharedNotebook
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:Tag
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:User
read	.\evernote\edam\type\ttypes.py	/^  def read(self, iprot):$/;"	m	class:UserAttributes
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:authenticate_args
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:authenticate_result
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:checkVersion_args
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:checkVersion_result
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:getPublicUserInfo_args
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:getPublicUserInfo_result
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:getUser_args
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:getUser_result
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:refreshAuthentication_args
read	.\evernote\edam\userstore\UserStore.py	/^  def read(self, iprot):$/;"	m	class:refreshAuthentication_result
read	.\evernote\edam\userstore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:AuthenticationResult
read	.\evernote\edam\userstore\ttypes.py	/^  def read(self, iprot):$/;"	m	class:PublicUserInfo
read	.\thrift\Thrift.py	/^  def read(self, iprot):$/;"	m	class:TApplicationException
read	.\thrift\server\TNonblockingServer.py	/^    def read(self):$/;"	m	class:Connection
read	.\thrift\server\TNonblockingServer.py	/^    def read(self, *args, **kwargs):$/;"	f	function:socket_exception
read	.\thrift\transport\THttpClient.py	/^  def read(self, sz):$/;"	m	class:THttpClient
read	.\thrift\transport\TSocket.py	/^  def read(self, sz):$/;"	m	class:TSocket
read	.\thrift\transport\TTransport.py	/^  def read(self, sz):$/;"	m	class:TBufferedTransport
read	.\thrift\transport\TTransport.py	/^  def read(self, sz):$/;"	m	class:TFileObjectTransport
read	.\thrift\transport\TTransport.py	/^  def read(self, sz):$/;"	m	class:TFramedTransport
read	.\thrift\transport\TTransport.py	/^  def read(self, sz):$/;"	m	class:TMemoryBuffer
read	.\thrift\transport\TTransport.py	/^  def read(self, sz):$/;"	m	class:TTransportBase
readAll	.\thrift\transport\TTransport.py	/^  def readAll(self, sz):$/;"	m	class:TTransportBase
readBool	.\thrift\protocol\TBinaryProtocol.py	/^  def readBool(self):$/;"	m	class:TBinaryProtocol
readBool	.\thrift\protocol\TProtocol.py	/^  def readBool(self):$/;"	m	class:TProtocolBase
readByte	.\thrift\protocol\TBinaryProtocol.py	/^  def readByte(self):$/;"	m	class:TBinaryProtocol
readByte	.\thrift\protocol\TProtocol.py	/^  def readByte(self):$/;"	m	class:TProtocolBase
readByte	.\thrift\protocol\fastbinary.c	/^static int8_t readByte(DecodeBuffer* input) {$/;"	f	file:
readBytes	.\thrift\protocol\fastbinary.c	/^static bool readBytes(DecodeBuffer* input, char** output, int len) {$/;"	f	file:
readDouble	.\thrift\protocol\TBinaryProtocol.py	/^  def readDouble(self):$/;"	m	class:TBinaryProtocol
readDouble	.\thrift\protocol\TProtocol.py	/^  def readDouble(self):$/;"	m	class:TProtocolBase
readDouble	.\thrift\protocol\fastbinary.c	/^static double readDouble(DecodeBuffer* input) {$/;"	f	file:
readFieldBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def readFieldBegin(self):$/;"	m	class:TBinaryProtocol
readFieldBegin	.\thrift\protocol\TProtocol.py	/^  def readFieldBegin(self):$/;"	m	class:TProtocolBase
readFieldEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def readFieldEnd(self):$/;"	m	class:TBinaryProtocol
readFieldEnd	.\thrift\protocol\TProtocol.py	/^  def readFieldEnd(self):$/;"	m	class:TProtocolBase
readFrame	.\thrift\transport\TTransport.py	/^  def readFrame(self):$/;"	m	class:TFramedTransport
readI16	.\thrift\protocol\TBinaryProtocol.py	/^  def readI16(self):$/;"	m	class:TBinaryProtocol
readI16	.\thrift\protocol\TProtocol.py	/^  def readI16(self):$/;"	m	class:TProtocolBase
readI16	.\thrift\protocol\fastbinary.c	/^static int16_t readI16(DecodeBuffer* input) {$/;"	f	file:
readI32	.\thrift\protocol\TBinaryProtocol.py	/^  def readI32(self):$/;"	m	class:TBinaryProtocol
readI32	.\thrift\protocol\TProtocol.py	/^  def readI32(self):$/;"	m	class:TProtocolBase
readI32	.\thrift\protocol\fastbinary.c	/^static int32_t readI32(DecodeBuffer* input) {$/;"	f	file:
readI64	.\thrift\protocol\TBinaryProtocol.py	/^  def readI64(self):$/;"	m	class:TBinaryProtocol
readI64	.\thrift\protocol\TProtocol.py	/^  def readI64(self):$/;"	m	class:TProtocolBase
readI64	.\thrift\protocol\fastbinary.c	/^static int64_t readI64(DecodeBuffer* input) {$/;"	f	file:
readListBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def readListBegin(self):$/;"	m	class:TBinaryProtocol
readListBegin	.\thrift\protocol\TProtocol.py	/^  def readListBegin(self):$/;"	m	class:TProtocolBase
readListEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def readListEnd(self):$/;"	m	class:TBinaryProtocol
readListEnd	.\thrift\protocol\TProtocol.py	/^  def readListEnd(self):$/;"	m	class:TProtocolBase
readMapBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def readMapBegin(self):$/;"	m	class:TBinaryProtocol
readMapBegin	.\thrift\protocol\TProtocol.py	/^  def readMapBegin(self):$/;"	m	class:TProtocolBase
readMapEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def readMapEnd(self):$/;"	m	class:TBinaryProtocol
readMapEnd	.\thrift\protocol\TProtocol.py	/^  def readMapEnd(self):$/;"	m	class:TProtocolBase
readMessageBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def readMessageBegin(self):$/;"	m	class:TBinaryProtocol
readMessageBegin	.\thrift\protocol\TProtocol.py	/^  def readMessageBegin(self):$/;"	m	class:TProtocolBase
readMessageEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def readMessageEnd(self):$/;"	m	class:TBinaryProtocol
readMessageEnd	.\thrift\protocol\TProtocol.py	/^  def readMessageEnd(self):$/;"	m	class:TProtocolBase
readSetBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def readSetBegin(self):$/;"	m	class:TBinaryProtocol
readSetBegin	.\thrift\protocol\TProtocol.py	/^  def readSetBegin(self):$/;"	m	class:TProtocolBase
readSetEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def readSetEnd(self):$/;"	m	class:TBinaryProtocol
readSetEnd	.\thrift\protocol\TProtocol.py	/^  def readSetEnd(self):$/;"	m	class:TProtocolBase
readString	.\thrift\protocol\TBinaryProtocol.py	/^  def readString(self):$/;"	m	class:TBinaryProtocol
readString	.\thrift\protocol\TProtocol.py	/^  def readString(self):$/;"	m	class:TProtocolBase
readStructBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def readStructBegin(self):$/;"	m	class:TBinaryProtocol
readStructBegin	.\thrift\protocol\TProtocol.py	/^  def readStructBegin(self):$/;"	m	class:TProtocolBase
readStructEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def readStructEnd(self):$/;"	m	class:TBinaryProtocol
readStructEnd	.\thrift\protocol\TProtocol.py	/^  def readStructEnd(self):$/;"	m	class:TProtocolBase
ready	.\thrift\server\TNonblockingServer.py	/^    def ready(self, all_ok, message):$/;"	m	class:Connection
recv_authenticate	.\evernote\edam\userstore\UserStore.py	/^  def recv_authenticate(self, ):$/;"	m	class:Client
recv_authenticateToSharedNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_authenticateToSharedNote(self, ):$/;"	m	class:Client
recv_authenticateToSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_authenticateToSharedNotebook(self, ):$/;"	m	class:Client
recv_checkVersion	.\evernote\edam\userstore\UserStore.py	/^  def recv_checkVersion(self, ):$/;"	m	class:Client
recv_copyNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_copyNote(self, ):$/;"	m	class:Client
recv_createLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_createLinkedNotebook(self, ):$/;"	m	class:Client
recv_createNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_createNote(self, ):$/;"	m	class:Client
recv_createNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_createNotebook(self, ):$/;"	m	class:Client
recv_createSearch	.\evernote\edam\notestore\NoteStore.py	/^  def recv_createSearch(self, ):$/;"	m	class:Client
recv_createSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_createSharedNotebook(self, ):$/;"	m	class:Client
recv_createTag	.\evernote\edam\notestore\NoteStore.py	/^  def recv_createTag(self, ):$/;"	m	class:Client
recv_deleteNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_deleteNote(self, ):$/;"	m	class:Client
recv_emailNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_emailNote(self, ):$/;"	m	class:Client
recv_expungeInactiveNotes	.\evernote\edam\notestore\NoteStore.py	/^  def recv_expungeInactiveNotes(self, ):$/;"	m	class:Client
recv_expungeLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_expungeLinkedNotebook(self, ):$/;"	m	class:Client
recv_expungeNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_expungeNote(self, ):$/;"	m	class:Client
recv_expungeNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_expungeNotebook(self, ):$/;"	m	class:Client
recv_expungeNotes	.\evernote\edam\notestore\NoteStore.py	/^  def recv_expungeNotes(self, ):$/;"	m	class:Client
recv_expungeSearch	.\evernote\edam\notestore\NoteStore.py	/^  def recv_expungeSearch(self, ):$/;"	m	class:Client
recv_expungeSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def recv_expungeSharedNotebooks(self, ):$/;"	m	class:Client
recv_expungeTag	.\evernote\edam\notestore\NoteStore.py	/^  def recv_expungeTag(self, ):$/;"	m	class:Client
recv_findNoteCounts	.\evernote\edam\notestore\NoteStore.py	/^  def recv_findNoteCounts(self, ):$/;"	m	class:Client
recv_findNoteOffset	.\evernote\edam\notestore\NoteStore.py	/^  def recv_findNoteOffset(self, ):$/;"	m	class:Client
recv_findNotes	.\evernote\edam\notestore\NoteStore.py	/^  def recv_findNotes(self, ):$/;"	m	class:Client
recv_findNotesMetadata	.\evernote\edam\notestore\NoteStore.py	/^  def recv_findNotesMetadata(self, ):$/;"	m	class:Client
recv_getAccountSize	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getAccountSize(self, ):$/;"	m	class:Client
recv_getAds	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getAds(self, ):$/;"	m	class:Client
recv_getDefaultNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getDefaultNotebook(self, ):$/;"	m	class:Client
recv_getLinkedNotebookSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getLinkedNotebookSyncChunk(self, ):$/;"	m	class:Client
recv_getLinkedNotebookSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getLinkedNotebookSyncState(self, ):$/;"	m	class:Client
recv_getNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getNote(self, ):$/;"	m	class:Client
recv_getNoteContent	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getNoteContent(self, ):$/;"	m	class:Client
recv_getNoteSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getNoteSearchText(self, ):$/;"	m	class:Client
recv_getNoteTagNames	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getNoteTagNames(self, ):$/;"	m	class:Client
recv_getNoteVersion	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getNoteVersion(self, ):$/;"	m	class:Client
recv_getNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getNotebook(self, ):$/;"	m	class:Client
recv_getPublicNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getPublicNotebook(self, ):$/;"	m	class:Client
recv_getPublicUserInfo	.\evernote\edam\userstore\UserStore.py	/^  def recv_getPublicUserInfo(self, ):$/;"	m	class:Client
recv_getRandomAd	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getRandomAd(self, ):$/;"	m	class:Client
recv_getResource	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getResource(self, ):$/;"	m	class:Client
recv_getResourceAlternateData	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getResourceAlternateData(self, ):$/;"	m	class:Client
recv_getResourceAttributes	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getResourceAttributes(self, ):$/;"	m	class:Client
recv_getResourceByHash	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getResourceByHash(self, ):$/;"	m	class:Client
recv_getResourceData	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getResourceData(self, ):$/;"	m	class:Client
recv_getResourceRecognition	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getResourceRecognition(self, ):$/;"	m	class:Client
recv_getResourceSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getResourceSearchText(self, ):$/;"	m	class:Client
recv_getSearch	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getSearch(self, ):$/;"	m	class:Client
recv_getSharedNotebookByAuth	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getSharedNotebookByAuth(self, ):$/;"	m	class:Client
recv_getSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getSyncChunk(self, ):$/;"	m	class:Client
recv_getSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getSyncState(self, ):$/;"	m	class:Client
recv_getTag	.\evernote\edam\notestore\NoteStore.py	/^  def recv_getTag(self, ):$/;"	m	class:Client
recv_getUser	.\evernote\edam\userstore\UserStore.py	/^  def recv_getUser(self, ):$/;"	m	class:Client
recv_listLinkedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def recv_listLinkedNotebooks(self, ):$/;"	m	class:Client
recv_listNoteVersions	.\evernote\edam\notestore\NoteStore.py	/^  def recv_listNoteVersions(self, ):$/;"	m	class:Client
recv_listNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def recv_listNotebooks(self, ):$/;"	m	class:Client
recv_listSearches	.\evernote\edam\notestore\NoteStore.py	/^  def recv_listSearches(self, ):$/;"	m	class:Client
recv_listSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def recv_listSharedNotebooks(self, ):$/;"	m	class:Client
recv_listTags	.\evernote\edam\notestore\NoteStore.py	/^  def recv_listTags(self, ):$/;"	m	class:Client
recv_listTagsByNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_listTagsByNotebook(self, ):$/;"	m	class:Client
recv_refreshAuthentication	.\evernote\edam\userstore\UserStore.py	/^  def recv_refreshAuthentication(self, ):$/;"	m	class:Client
recv_shareNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_shareNote(self, ):$/;"	m	class:Client
recv_stopSharingNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_stopSharingNote(self, ):$/;"	m	class:Client
recv_untagAll	.\evernote\edam\notestore\NoteStore.py	/^  def recv_untagAll(self, ):$/;"	m	class:Client
recv_updateLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_updateLinkedNotebook(self, ):$/;"	m	class:Client
recv_updateNote	.\evernote\edam\notestore\NoteStore.py	/^  def recv_updateNote(self, ):$/;"	m	class:Client
recv_updateNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def recv_updateNotebook(self, ):$/;"	m	class:Client
recv_updateResource	.\evernote\edam\notestore\NoteStore.py	/^  def recv_updateResource(self, ):$/;"	m	class:Client
recv_updateSearch	.\evernote\edam\notestore\NoteStore.py	/^  def recv_updateSearch(self, ):$/;"	m	class:Client
recv_updateTag	.\evernote\edam\notestore\NoteStore.py	/^  def recv_updateTag(self, ):$/;"	m	class:Client
refill_callable	.\thrift\protocol\fastbinary.c	/^  PyObject* refill_callable;$/;"	m	struct:__anon5	file:
refreshAuthentication	.\evernote\edam\userstore\UserStore.py	/^  def refreshAuthentication(self, authenticationToken):$/;"	m	class:Client
refreshAuthentication	.\evernote\edam\userstore\UserStore.py	/^  def refreshAuthentication(self, authenticationToken):$/;"	m	class:Iface
refreshAuthentication_args	.\evernote\edam\userstore\UserStore.py	/^class refreshAuthentication_args(object):$/;"	c
refreshAuthentication_result	.\evernote\edam\userstore\UserStore.py	/^class refreshAuthentication_result(object):$/;"	c
render_POST	.\thrift\transport\TTwisted.py	/^    def render_POST(self, request):$/;"	m	class:ThriftResource
resource	.\EDAMTest.py	/^resource = Types.Resource()$/;"	v
resource	.\thrift\transport\TTwisted.py	/^from twisted.web import server, resource, http$/;"	i
run	.\thrift\server\TNonblockingServer.py	/^    def run(self):$/;"	m	class:Worker
scons_env	.\thrift\TSCons.py	/^def scons_env(env, add=''):$/;"	f
select	.\thrift\server\TNonblockingServer.py	/^import select$/;"	i
sendMessage	.\thrift\transport\TTwisted.py	/^    def sendMessage(self, message):$/;"	m	class:TCallbackTransport
sendMessage	.\thrift\transport\TTwisted.py	/^    def sendMessage(self, message):$/;"	m	class:TMessageSenderTransport
send_authenticate	.\evernote\edam\userstore\UserStore.py	/^  def send_authenticate(self, username, password, consumerKey, consumerSecret):$/;"	m	class:Client
send_authenticateToSharedNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_authenticateToSharedNote(self, guid, noteKey):$/;"	m	class:Client
send_authenticateToSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_authenticateToSharedNotebook(self, shareKey, authenticationToken):$/;"	m	class:Client
send_checkVersion	.\evernote\edam\userstore\UserStore.py	/^  def send_checkVersion(self, clientName, edamVersionMajor, edamVersionMinor):$/;"	m	class:Client
send_copyNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_copyNote(self, authenticationToken, noteGuid, toNotebookGuid):$/;"	m	class:Client
send_createLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_createLinkedNotebook(self, authenticationToken, linkedNotebook):$/;"	m	class:Client
send_createNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_createNote(self, authenticationToken, note):$/;"	m	class:Client
send_createNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_createNotebook(self, authenticationToken, notebook):$/;"	m	class:Client
send_createSearch	.\evernote\edam\notestore\NoteStore.py	/^  def send_createSearch(self, authenticationToken, search):$/;"	m	class:Client
send_createSharedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_createSharedNotebook(self, authenticationToken, sharedNotebook):$/;"	m	class:Client
send_createTag	.\evernote\edam\notestore\NoteStore.py	/^  def send_createTag(self, authenticationToken, tag):$/;"	m	class:Client
send_deleteNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_deleteNote(self, authenticationToken, guid):$/;"	m	class:Client
send_emailNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_emailNote(self, authenticationToken, parameters):$/;"	m	class:Client
send_expungeInactiveNotes	.\evernote\edam\notestore\NoteStore.py	/^  def send_expungeInactiveNotes(self, authenticationToken):$/;"	m	class:Client
send_expungeLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_expungeLinkedNotebook(self, authenticationToken, guid):$/;"	m	class:Client
send_expungeNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_expungeNote(self, authenticationToken, guid):$/;"	m	class:Client
send_expungeNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_expungeNotebook(self, authenticationToken, guid):$/;"	m	class:Client
send_expungeNotes	.\evernote\edam\notestore\NoteStore.py	/^  def send_expungeNotes(self, authenticationToken, noteGuids):$/;"	m	class:Client
send_expungeSearch	.\evernote\edam\notestore\NoteStore.py	/^  def send_expungeSearch(self, authenticationToken, guid):$/;"	m	class:Client
send_expungeSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def send_expungeSharedNotebooks(self, authenticationToken, sharedNotebookIds):$/;"	m	class:Client
send_expungeTag	.\evernote\edam\notestore\NoteStore.py	/^  def send_expungeTag(self, authenticationToken, guid):$/;"	m	class:Client
send_findNoteCounts	.\evernote\edam\notestore\NoteStore.py	/^  def send_findNoteCounts(self, authenticationToken, filter, withTrash):$/;"	m	class:Client
send_findNoteOffset	.\evernote\edam\notestore\NoteStore.py	/^  def send_findNoteOffset(self, authenticationToken, filter, guid):$/;"	m	class:Client
send_findNotes	.\evernote\edam\notestore\NoteStore.py	/^  def send_findNotes(self, authenticationToken, filter, offset, maxNotes):$/;"	m	class:Client
send_findNotesMetadata	.\evernote\edam\notestore\NoteStore.py	/^  def send_findNotesMetadata(self, authenticationToken, filter, offset, maxNotes, resultSpec):$/;"	m	class:Client
send_getAccountSize	.\evernote\edam\notestore\NoteStore.py	/^  def send_getAccountSize(self, authenticationToken):$/;"	m	class:Client
send_getAds	.\evernote\edam\notestore\NoteStore.py	/^  def send_getAds(self, authenticationToken, adParameters):$/;"	m	class:Client
send_getDefaultNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_getDefaultNotebook(self, authenticationToken):$/;"	m	class:Client
send_getLinkedNotebookSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def send_getLinkedNotebookSyncChunk(self, authenticationToken, linkedNotebook, afterUSN, maxEntries, fullSyncOnly):$/;"	m	class:Client
send_getLinkedNotebookSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def send_getLinkedNotebookSyncState(self, authenticationToken, linkedNotebook):$/;"	m	class:Client
send_getNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_getNote(self, authenticationToken, guid, withContent, withResourcesData, withResourcesRecognition, withResourcesAlternateData):$/;"	m	class:Client
send_getNoteContent	.\evernote\edam\notestore\NoteStore.py	/^  def send_getNoteContent(self, authenticationToken, guid):$/;"	m	class:Client
send_getNoteSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def send_getNoteSearchText(self, authenticationToken, guid, noteOnly, tokenizeForIndexing):$/;"	m	class:Client
send_getNoteTagNames	.\evernote\edam\notestore\NoteStore.py	/^  def send_getNoteTagNames(self, authenticationToken, guid):$/;"	m	class:Client
send_getNoteVersion	.\evernote\edam\notestore\NoteStore.py	/^  def send_getNoteVersion(self, authenticationToken, noteGuid, updateSequenceNum, withResourcesData, withResourcesRecognition, withResourcesAlternateData):$/;"	m	class:Client
send_getNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_getNotebook(self, authenticationToken, guid):$/;"	m	class:Client
send_getPublicNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_getPublicNotebook(self, userId, publicUri):$/;"	m	class:Client
send_getPublicUserInfo	.\evernote\edam\userstore\UserStore.py	/^  def send_getPublicUserInfo(self, username):$/;"	m	class:Client
send_getRandomAd	.\evernote\edam\notestore\NoteStore.py	/^  def send_getRandomAd(self, authenticationToken, adParameters):$/;"	m	class:Client
send_getResource	.\evernote\edam\notestore\NoteStore.py	/^  def send_getResource(self, authenticationToken, guid, withData, withRecognition, withAttributes, withAlternateData):$/;"	m	class:Client
send_getResourceAlternateData	.\evernote\edam\notestore\NoteStore.py	/^  def send_getResourceAlternateData(self, authenticationToken, guid):$/;"	m	class:Client
send_getResourceAttributes	.\evernote\edam\notestore\NoteStore.py	/^  def send_getResourceAttributes(self, authenticationToken, guid):$/;"	m	class:Client
send_getResourceByHash	.\evernote\edam\notestore\NoteStore.py	/^  def send_getResourceByHash(self, authenticationToken, noteGuid, contentHash, withData, withRecognition, withAlternateData):$/;"	m	class:Client
send_getResourceData	.\evernote\edam\notestore\NoteStore.py	/^  def send_getResourceData(self, authenticationToken, guid):$/;"	m	class:Client
send_getResourceRecognition	.\evernote\edam\notestore\NoteStore.py	/^  def send_getResourceRecognition(self, authenticationToken, guid):$/;"	m	class:Client
send_getResourceSearchText	.\evernote\edam\notestore\NoteStore.py	/^  def send_getResourceSearchText(self, authenticationToken, guid):$/;"	m	class:Client
send_getSearch	.\evernote\edam\notestore\NoteStore.py	/^  def send_getSearch(self, authenticationToken, guid):$/;"	m	class:Client
send_getSharedNotebookByAuth	.\evernote\edam\notestore\NoteStore.py	/^  def send_getSharedNotebookByAuth(self, authenticationToken):$/;"	m	class:Client
send_getSyncChunk	.\evernote\edam\notestore\NoteStore.py	/^  def send_getSyncChunk(self, authenticationToken, afterUSN, maxEntries, fullSyncOnly):$/;"	m	class:Client
send_getSyncState	.\evernote\edam\notestore\NoteStore.py	/^  def send_getSyncState(self, authenticationToken):$/;"	m	class:Client
send_getTag	.\evernote\edam\notestore\NoteStore.py	/^  def send_getTag(self, authenticationToken, guid):$/;"	m	class:Client
send_getUser	.\evernote\edam\userstore\UserStore.py	/^  def send_getUser(self, authenticationToken):$/;"	m	class:Client
send_listLinkedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def send_listLinkedNotebooks(self, authenticationToken):$/;"	m	class:Client
send_listNoteVersions	.\evernote\edam\notestore\NoteStore.py	/^  def send_listNoteVersions(self, authenticationToken, noteGuid):$/;"	m	class:Client
send_listNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def send_listNotebooks(self, authenticationToken):$/;"	m	class:Client
send_listSearches	.\evernote\edam\notestore\NoteStore.py	/^  def send_listSearches(self, authenticationToken):$/;"	m	class:Client
send_listSharedNotebooks	.\evernote\edam\notestore\NoteStore.py	/^  def send_listSharedNotebooks(self, authenticationToken):$/;"	m	class:Client
send_listTags	.\evernote\edam\notestore\NoteStore.py	/^  def send_listTags(self, authenticationToken):$/;"	m	class:Client
send_listTagsByNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_listTagsByNotebook(self, authenticationToken, notebookGuid):$/;"	m	class:Client
send_refreshAuthentication	.\evernote\edam\userstore\UserStore.py	/^  def send_refreshAuthentication(self, authenticationToken):$/;"	m	class:Client
send_shareNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_shareNote(self, authenticationToken, guid):$/;"	m	class:Client
send_stopSharingNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_stopSharingNote(self, authenticationToken, guid):$/;"	m	class:Client
send_untagAll	.\evernote\edam\notestore\NoteStore.py	/^  def send_untagAll(self, authenticationToken, guid):$/;"	m	class:Client
send_updateLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_updateLinkedNotebook(self, authenticationToken, linkedNotebook):$/;"	m	class:Client
send_updateNote	.\evernote\edam\notestore\NoteStore.py	/^  def send_updateNote(self, authenticationToken, note):$/;"	m	class:Client
send_updateNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def send_updateNotebook(self, authenticationToken, notebook):$/;"	m	class:Client
send_updateResource	.\evernote\edam\notestore\NoteStore.py	/^  def send_updateResource(self, authenticationToken, resource):$/;"	m	class:Client
send_updateSearch	.\evernote\edam\notestore\NoteStore.py	/^  def send_updateSearch(self, authenticationToken, search):$/;"	m	class:Client
send_updateTag	.\evernote\edam\notestore\NoteStore.py	/^  def send_updateTag(self, authenticationToken, tag):$/;"	m	class:Client
serialize	.\thrift\TSerialization.py	/^def serialize(thrift_object, protocol_factory = TBinaryProtocol.TBinaryProtocolFactory()):$/;"	f
serve	.\thrift\server\THttpServer.py	/^  def serve(self):$/;"	m	class:THttpServer
serve	.\thrift\server\TNonblockingServer.py	/^    def serve(self):$/;"	m	class:TNonblockingServer
serve	.\thrift\server\TServer.py	/^  def serve(self):$/;"	m	class:TForkingServer
serve	.\thrift\server\TServer.py	/^  def serve(self):$/;"	m	class:TServer
serve	.\thrift\server\TServer.py	/^  def serve(self):$/;"	m	class:TSimpleServer
serve	.\thrift\server\TServer.py	/^  def serve(self):$/;"	m	class:TThreadPoolServer
serve	.\thrift\server\TServer.py	/^  def serve(self):$/;"	m	class:TThreadedServer
serveClient	.\thrift\server\TServer.py	/^  def serveClient(self, client):$/;"	m	class:TThreadPoolServer
serveThread	.\thrift\server\TServer.py	/^  def serveThread(self):$/;"	m	class:TThreadPoolServer
server	.\thrift\transport\TTwisted.py	/^from twisted.web import server, resource, http$/;"	i
setHandle	.\thrift\transport\TSocket.py	/^  def setHandle(self, h):$/;"	m	class:TSocket
setNumThreads	.\thrift\server\TNonblockingServer.py	/^    def setNumThreads(self, num):$/;"	m	class:TNonblockingServer
setNumThreads	.\thrift\server\TServer.py	/^  def setNumThreads(self, num):$/;"	m	class:TThreadPoolServer
setTimeout	.\thrift\transport\THttpClient.py	/^  def setTimeout(self, ms):$/;"	m	class:THttpClient
setTimeout	.\thrift\transport\TSocket.py	/^  def setTimeout(self, ms):$/;"	m	class:TSocket
shareNote	.\evernote\edam\notestore\NoteStore.py	/^  def shareNote(self, authenticationToken, guid):$/;"	m	class:Client
shareNote	.\evernote\edam\notestore\NoteStore.py	/^  def shareNote(self, authenticationToken, guid):$/;"	m	class:Iface
shareNote_args	.\evernote\edam\notestore\NoteStore.py	/^class shareNote_args(object):$/;"	c
shareNote_result	.\evernote\edam\notestore\NoteStore.py	/^class shareNote_result(object):$/;"	c
skip	.\thrift\protocol\TProtocol.py	/^  def skip(self, type):$/;"	m	class:TProtocolBase
skip	.\thrift\protocol\fastbinary.c	/^skip(DecodeBuffer* input, TType type) {$/;"	f	file:
socket	.\thrift\server\TNonblockingServer.py	/^import socket$/;"	i
socket	.\thrift\transport\THttpClient.py	/^import socket$/;"	i
socket	.\thrift\transport\TSocket.py	/^import socket$/;"	i
socket_exception	.\thrift\server\TNonblockingServer.py	/^def socket_exception(func):$/;"	f
spec	.\thrift\protocol\fastbinary.c	/^  PyObject* spec;$/;"	m	struct:__anon3	file:
stopSharingNote	.\evernote\edam\notestore\NoteStore.py	/^  def stopSharingNote(self, authenticationToken, guid):$/;"	m	class:Client
stopSharingNote	.\evernote\edam\notestore\NoteStore.py	/^  def stopSharingNote(self, authenticationToken, guid):$/;"	m	class:Iface
stopSharingNote_args	.\evernote\edam\notestore\NoteStore.py	/^class stopSharingNote_args(object):$/;"	c
stopSharingNote_result	.\evernote\edam\notestore\NoteStore.py	/^class stopSharingNote_result(object):$/;"	c
stringReceived	.\thrift\transport\TTwisted.py	/^    def stringReceived(self, frame):$/;"	m	class:ThriftClientProtocol
stringReceived	.\thrift\transport\TTwisted.py	/^    def stringReceived(self, frame):$/;"	m	class:ThriftServerProtocol
stringiobuf	.\thrift\protocol\fastbinary.c	/^  PyObject* stringiobuf;$/;"	m	struct:__anon5	file:
struct	.\thrift\server\TNonblockingServer.py	/^import struct$/;"	i
sys	.\EDAMTest.py	/^import sys$/;"	i
sys	.\thrift\Thrift.py	/^import sys$/;"	i
sys	.\thrift\server\TServer.py	/^import sys$/;"	i
tag	.\thrift\protocol\fastbinary.c	/^  int tag;$/;"	m	struct:__anon4	file:
threading	.\thrift\server\TNonblockingServer.py	/^import threading$/;"	i
threading	.\thrift\server\TServer.py	/^import threading$/;"	i
thrift	.\EDAMTest.py	/^import thrift.protocol.TBinaryProtocol as TBinaryProtocol$/;"	i
thrift	.\EDAMTest.py	/^import thrift.transport.THttpClient as THttpClient$/;"	i
thrift_spec	.\evernote\edam\error\ttypes.py	/^  thrift_spec = ($/;"	v	class:EDAMNotFoundException
thrift_spec	.\evernote\edam\error\ttypes.py	/^  thrift_spec = ($/;"	v	class:EDAMSystemException
thrift_spec	.\evernote\edam\error\ttypes.py	/^  thrift_spec = ($/;"	v	class:EDAMUserException
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:authenticateToSharedNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:authenticateToSharedNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:authenticateToSharedNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:authenticateToSharedNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:copyNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:copyNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createLinkedNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createLinkedNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createSearch_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createSearch_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createSharedNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createSharedNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createTag_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:createTag_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:deleteNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:deleteNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:emailNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:emailNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeInactiveNotes_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeInactiveNotes_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeLinkedNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeLinkedNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeNotes_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeNotes_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeSearch_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeSearch_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeSharedNotebooks_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeSharedNotebooks_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeTag_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:expungeTag_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:findNoteCounts_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:findNoteCounts_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:findNoteOffset_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:findNoteOffset_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:findNotesMetadata_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:findNotesMetadata_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:findNotes_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:findNotes_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getAccountSize_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getAccountSize_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getAds_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getAds_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getDefaultNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getDefaultNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getLinkedNotebookSyncChunk_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getLinkedNotebookSyncChunk_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getLinkedNotebookSyncState_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getLinkedNotebookSyncState_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNoteContent_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNoteContent_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNoteSearchText_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNoteSearchText_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNoteTagNames_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNoteTagNames_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNoteVersion_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNoteVersion_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getPublicNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getPublicNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getRandomAd_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getRandomAd_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceAlternateData_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceAlternateData_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceAttributes_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceAttributes_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceByHash_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceByHash_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceData_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceData_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceRecognition_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceRecognition_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceSearchText_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResourceSearchText_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResource_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getResource_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getSearch_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getSearch_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getSharedNotebookByAuth_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getSharedNotebookByAuth_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getSyncChunk_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getSyncChunk_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getSyncState_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getSyncState_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getTag_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:getTag_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listLinkedNotebooks_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listLinkedNotebooks_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listNoteVersions_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listNoteVersions_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listNotebooks_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listNotebooks_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listSearches_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listSearches_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listSharedNotebooks_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listSharedNotebooks_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listTagsByNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listTagsByNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listTags_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:listTags_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:shareNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:shareNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:stopSharingNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:stopSharingNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:untagAll_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:untagAll_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateLinkedNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateLinkedNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateNote_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateNote_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateNotebook_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateNotebook_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateResource_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateResource_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateSearch_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateSearch_result
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateTag_args
thrift_spec	.\evernote\edam\notestore\NoteStore.py	/^  thrift_spec = ($/;"	v	class:updateTag_result
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:AdImpressions
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:AdParameters
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:NoteCollectionCounts
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:NoteEmailParameters
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:NoteFilter
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:NoteList
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:NoteMetadata
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:NoteVersionId
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:NotesMetadataList
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:NotesMetadataResultSpec
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:SyncChunk
thrift_spec	.\evernote\edam\notestore\ttypes.py	/^  thrift_spec = ($/;"	v	class:SyncState
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:Accounting
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:Ad
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:Data
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:LinkedNotebook
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:Note
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:NoteAttributes
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:Notebook
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:Publishing
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:Resource
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:ResourceAttributes
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:SavedSearch
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:SharedNotebook
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:Tag
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:User
thrift_spec	.\evernote\edam\type\ttypes.py	/^  thrift_spec = ($/;"	v	class:UserAttributes
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:authenticate_args
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:authenticate_result
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:checkVersion_args
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:checkVersion_result
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:getPublicUserInfo_args
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:getPublicUserInfo_result
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:getUser_args
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:getUser_result
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:refreshAuthentication_args
thrift_spec	.\evernote\edam\userstore\UserStore.py	/^  thrift_spec = ($/;"	v	class:refreshAuthentication_result
thrift_spec	.\evernote\edam\userstore\ttypes.py	/^  thrift_spec = ($/;"	v	class:AuthenticationResult
thrift_spec	.\evernote\edam\userstore\ttypes.py	/^  thrift_spec = ($/;"	v	class:PublicUserInfo
time	.\EDAMTest.py	/^import time$/;"	i
traceback	.\thrift\server\TServer.py	/^import traceback$/;"	i
transport	.\EDAMTest.py	/^import thrift.transport.THttpClient as THttpClient$/;"	i
try_close	.\thrift\server\TServer.py	/^    def try_close(file):$/;"	f	function:TForkingServer.serve
ttypes	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.error.ttypes$/;"	i
ttypes	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.limits.ttypes$/;"	i
ttypes	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.type.ttypes$/;"	i
ttypes	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.userstore.ttypes$/;"	i
ttypes	.\evernote\edam\type\ttypes.py	/^import evernote.edam.limits.ttypes$/;"	i
ttypes	.\evernote\edam\userstore\ttypes.py	/^import evernote.edam.error.ttypes$/;"	i
ttypes	.\evernote\edam\userstore\ttypes.py	/^import evernote.edam.type.ttypes$/;"	i
type	.\EDAMTest.py	/^import evernote.edam.type.ttypes as Types$/;"	i
type	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.type.ttypes$/;"	i
type	.\evernote\edam\userstore\ttypes.py	/^import evernote.edam.type.ttypes$/;"	i
type	.\thrift\protocol\fastbinary.c	/^  TType type;$/;"	m	struct:__anon4	file:
typeargs	.\thrift\protocol\fastbinary.c	/^  PyObject* typeargs;$/;"	m	struct:__anon1	file:
typeargs	.\thrift\protocol\fastbinary.c	/^  PyObject* typeargs;$/;"	m	struct:__anon4	file:
unpack	.\thrift\protocol\TBinaryProtocol.py	/^from struct import pack, unpack$/;"	i
unpack	.\thrift\transport\TTransport.py	/^from struct import pack,unpack$/;"	i
untagAll	.\evernote\edam\notestore\NoteStore.py	/^  def untagAll(self, authenticationToken, guid):$/;"	m	class:Client
untagAll	.\evernote\edam\notestore\NoteStore.py	/^  def untagAll(self, authenticationToken, guid):$/;"	m	class:Iface
untagAll_args	.\evernote\edam\notestore\NoteStore.py	/^class untagAll_args(object):$/;"	c
untagAll_result	.\evernote\edam\notestore\NoteStore.py	/^class untagAll_result(object):$/;"	c
updateLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def updateLinkedNotebook(self, authenticationToken, linkedNotebook):$/;"	m	class:Client
updateLinkedNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def updateLinkedNotebook(self, authenticationToken, linkedNotebook):$/;"	m	class:Iface
updateLinkedNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class updateLinkedNotebook_args(object):$/;"	c
updateLinkedNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class updateLinkedNotebook_result(object):$/;"	c
updateNote	.\evernote\edam\notestore\NoteStore.py	/^  def updateNote(self, authenticationToken, note):$/;"	m	class:Client
updateNote	.\evernote\edam\notestore\NoteStore.py	/^  def updateNote(self, authenticationToken, note):$/;"	m	class:Iface
updateNote_args	.\evernote\edam\notestore\NoteStore.py	/^class updateNote_args(object):$/;"	c
updateNote_result	.\evernote\edam\notestore\NoteStore.py	/^class updateNote_result(object):$/;"	c
updateNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def updateNotebook(self, authenticationToken, notebook):$/;"	m	class:Client
updateNotebook	.\evernote\edam\notestore\NoteStore.py	/^  def updateNotebook(self, authenticationToken, notebook):$/;"	m	class:Iface
updateNotebook_args	.\evernote\edam\notestore\NoteStore.py	/^class updateNotebook_args(object):$/;"	c
updateNotebook_result	.\evernote\edam\notestore\NoteStore.py	/^class updateNotebook_result(object):$/;"	c
updateResource	.\evernote\edam\notestore\NoteStore.py	/^  def updateResource(self, authenticationToken, resource):$/;"	m	class:Client
updateResource	.\evernote\edam\notestore\NoteStore.py	/^  def updateResource(self, authenticationToken, resource):$/;"	m	class:Iface
updateResource_args	.\evernote\edam\notestore\NoteStore.py	/^class updateResource_args(object):$/;"	c
updateResource_result	.\evernote\edam\notestore\NoteStore.py	/^class updateResource_result(object):$/;"	c
updateSearch	.\evernote\edam\notestore\NoteStore.py	/^  def updateSearch(self, authenticationToken, search):$/;"	m	class:Client
updateSearch	.\evernote\edam\notestore\NoteStore.py	/^  def updateSearch(self, authenticationToken, search):$/;"	m	class:Iface
updateSearch_args	.\evernote\edam\notestore\NoteStore.py	/^class updateSearch_args(object):$/;"	c
updateSearch_result	.\evernote\edam\notestore\NoteStore.py	/^class updateSearch_result(object):$/;"	c
updateTag	.\evernote\edam\notestore\NoteStore.py	/^  def updateTag(self, authenticationToken, tag):$/;"	m	class:Client
updateTag	.\evernote\edam\notestore\NoteStore.py	/^  def updateTag(self, authenticationToken, tag):$/;"	m	class:Iface
updateTag_args	.\evernote\edam\notestore\NoteStore.py	/^class updateTag_args(object):$/;"	c
updateTag_result	.\evernote\edam\notestore\NoteStore.py	/^class updateTag_result(object):$/;"	c
urlparse	.\thrift\transport\THttpClient.py	/^import urlparse$/;"	i
user	.\EDAMTest.py	/^user = authResult.user$/;"	v
userStore	.\EDAMTest.py	/^userStore = UserStore.Client(userStoreProtocol)$/;"	v
userStoreHttpClient	.\EDAMTest.py	/^userStoreHttpClient = THttpClient.THttpClient(userStoreUri)$/;"	v
userStoreProtocol	.\EDAMTest.py	/^userStoreProtocol = TBinaryProtocol.TBinaryProtocol(userStoreHttpClient)$/;"	v
userStoreUri	.\EDAMTest.py	/^userStoreUri = "https:\/\/" + evernoteHost + "\/edam\/user"$/;"	v
username	.\EDAMTest.py	/^username = sys.argv[1]$/;"	v
userstore	.\EDAMTest.py	/^import evernote.edam.userstore.UserStore as UserStore$/;"	i
userstore	.\EDAMTest.py	/^import evernote.edam.userstore.constants as UserStoreConstants$/;"	i
userstore	.\evernote\edam\notestore\ttypes.py	/^import evernote.edam.userstore.ttypes$/;"	i
versionOK	.\EDAMTest.py	/^versionOK = userStore.checkVersion("Python EDAMTest",$/;"	v
vtag	.\thrift\protocol\fastbinary.c	/^  TType vtag;$/;"	m	struct:__anon2	file:
vtypeargs	.\thrift\protocol\fastbinary.c	/^  PyObject* vtypeargs;$/;"	m	struct:__anon2	file:
wake_up	.\thrift\server\TNonblockingServer.py	/^    def wake_up(self):$/;"	m	class:TNonblockingServer
warnings	.\thrift\transport\THttpClient.py	/^import warnings$/;"	i
write	.\evernote\edam\error\ttypes.py	/^  def write(self, oprot):$/;"	m	class:EDAMNotFoundException
write	.\evernote\edam\error\ttypes.py	/^  def write(self, oprot):$/;"	m	class:EDAMSystemException
write	.\evernote\edam\error\ttypes.py	/^  def write(self, oprot):$/;"	m	class:EDAMUserException
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:authenticateToSharedNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:authenticateToSharedNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:authenticateToSharedNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:authenticateToSharedNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:copyNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:copyNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createLinkedNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createLinkedNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createSearch_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createSearch_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createSharedNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createSharedNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createTag_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:createTag_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:deleteNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:deleteNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:emailNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:emailNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeInactiveNotes_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeInactiveNotes_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeLinkedNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeLinkedNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeNotes_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeNotes_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeSearch_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeSearch_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeSharedNotebooks_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeSharedNotebooks_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeTag_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:expungeTag_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:findNoteCounts_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:findNoteCounts_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:findNoteOffset_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:findNoteOffset_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:findNotesMetadata_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:findNotesMetadata_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:findNotes_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:findNotes_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getAccountSize_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getAccountSize_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getAds_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getAds_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getDefaultNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getDefaultNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getLinkedNotebookSyncChunk_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getLinkedNotebookSyncChunk_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getLinkedNotebookSyncState_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getLinkedNotebookSyncState_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNoteContent_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNoteContent_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNoteSearchText_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNoteSearchText_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNoteTagNames_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNoteTagNames_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNoteVersion_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNoteVersion_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getPublicNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getPublicNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getRandomAd_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getRandomAd_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceAlternateData_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceAlternateData_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceAttributes_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceAttributes_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceByHash_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceByHash_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceData_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceData_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceRecognition_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceRecognition_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceSearchText_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResourceSearchText_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResource_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getResource_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getSearch_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getSearch_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getSharedNotebookByAuth_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getSharedNotebookByAuth_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getSyncChunk_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getSyncChunk_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getSyncState_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getSyncState_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getTag_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:getTag_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listLinkedNotebooks_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listLinkedNotebooks_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listNoteVersions_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listNoteVersions_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listNotebooks_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listNotebooks_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listSearches_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listSearches_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listSharedNotebooks_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listSharedNotebooks_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listTagsByNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listTagsByNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listTags_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:listTags_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:shareNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:shareNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:stopSharingNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:stopSharingNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:untagAll_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:untagAll_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateLinkedNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateLinkedNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateNote_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateNote_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateNotebook_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateNotebook_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateResource_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateResource_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateSearch_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateSearch_result
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateTag_args
write	.\evernote\edam\notestore\NoteStore.py	/^  def write(self, oprot):$/;"	m	class:updateTag_result
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:AdImpressions
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:AdParameters
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:NoteCollectionCounts
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:NoteEmailParameters
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:NoteFilter
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:NoteList
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:NoteMetadata
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:NoteVersionId
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:NotesMetadataList
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:NotesMetadataResultSpec
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:SyncChunk
write	.\evernote\edam\notestore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:SyncState
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:Accounting
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:Ad
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:Data
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:LinkedNotebook
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:Note
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:NoteAttributes
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:Notebook
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:Publishing
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:Resource
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:ResourceAttributes
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:SavedSearch
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:SharedNotebook
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:Tag
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:User
write	.\evernote\edam\type\ttypes.py	/^  def write(self, oprot):$/;"	m	class:UserAttributes
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:authenticate_args
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:authenticate_result
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:checkVersion_args
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:checkVersion_result
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:getPublicUserInfo_args
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:getPublicUserInfo_result
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:getUser_args
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:getUser_result
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:refreshAuthentication_args
write	.\evernote\edam\userstore\UserStore.py	/^  def write(self, oprot):$/;"	m	class:refreshAuthentication_result
write	.\evernote\edam\userstore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:AuthenticationResult
write	.\evernote\edam\userstore\ttypes.py	/^  def write(self, oprot):$/;"	m	class:PublicUserInfo
write	.\thrift\Thrift.py	/^  def write(self, oprot):$/;"	m	class:TApplicationException
write	.\thrift\server\TNonblockingServer.py	/^    def write(self):$/;"	m	class:Connection
write	.\thrift\transport\THttpClient.py	/^  def write(self, buf):$/;"	m	class:THttpClient
write	.\thrift\transport\TSocket.py	/^  def write(self, buff):$/;"	m	class:TSocket
write	.\thrift\transport\TTransport.py	/^  def write(self, buf):$/;"	m	class:TBufferedTransport
write	.\thrift\transport\TTransport.py	/^  def write(self, buf):$/;"	m	class:TFileObjectTransport
write	.\thrift\transport\TTransport.py	/^  def write(self, buf):$/;"	m	class:TFramedTransport
write	.\thrift\transport\TTransport.py	/^  def write(self, buf):$/;"	m	class:TMemoryBuffer
write	.\thrift\transport\TTransport.py	/^  def write(self, buf):$/;"	m	class:TTransportBase
write	.\thrift\transport\TTwisted.py	/^    def write(self, buf):$/;"	m	class:TMessageSenderTransport
writeBool	.\thrift\protocol\TBinaryProtocol.py	/^  def writeBool(self, bool):$/;"	m	class:TBinaryProtocol
writeBool	.\thrift\protocol\TProtocol.py	/^  def writeBool(self, bool):$/;"	m	class:TProtocolBase
writeByte	.\thrift\protocol\TBinaryProtocol.py	/^  def writeByte(self, byte):$/;"	m	class:TBinaryProtocol
writeByte	.\thrift\protocol\TProtocol.py	/^  def writeByte(self, byte):$/;"	m	class:TProtocolBase
writeByte	.\thrift\protocol\fastbinary.c	/^static void writeByte(PyObject* outbuf, int8_t val) {$/;"	f	file:
writeDouble	.\thrift\protocol\TBinaryProtocol.py	/^  def writeDouble(self, dub):$/;"	m	class:TBinaryProtocol
writeDouble	.\thrift\protocol\TProtocol.py	/^  def writeDouble(self, dub):$/;"	m	class:TProtocolBase
writeDouble	.\thrift\protocol\fastbinary.c	/^static void writeDouble(PyObject* outbuf, double dub) {$/;"	f	file:
writeFieldBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def writeFieldBegin(self, name, type, id):$/;"	m	class:TBinaryProtocol
writeFieldBegin	.\thrift\protocol\TProtocol.py	/^  def writeFieldBegin(self, name, type, id):$/;"	m	class:TProtocolBase
writeFieldEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def writeFieldEnd(self):$/;"	m	class:TBinaryProtocol
writeFieldEnd	.\thrift\protocol\TProtocol.py	/^  def writeFieldEnd(self):$/;"	m	class:TProtocolBase
writeFieldStop	.\thrift\protocol\TBinaryProtocol.py	/^  def writeFieldStop(self):$/;"	m	class:TBinaryProtocol
writeFieldStop	.\thrift\protocol\TProtocol.py	/^  def writeFieldStop(self):$/;"	m	class:TProtocolBase
writeI16	.\thrift\protocol\TBinaryProtocol.py	/^  def writeI16(self, i16):$/;"	m	class:TBinaryProtocol
writeI16	.\thrift\protocol\TProtocol.py	/^  def writeI16(self, i16):$/;"	m	class:TProtocolBase
writeI16	.\thrift\protocol\fastbinary.c	/^static void writeI16(PyObject* outbuf, int16_t val) {$/;"	f	file:
writeI32	.\thrift\protocol\TBinaryProtocol.py	/^  def writeI32(self, i32):$/;"	m	class:TBinaryProtocol
writeI32	.\thrift\protocol\TProtocol.py	/^  def writeI32(self, i32):$/;"	m	class:TProtocolBase
writeI32	.\thrift\protocol\fastbinary.c	/^static void writeI32(PyObject* outbuf, int32_t val) {$/;"	f	file:
writeI64	.\thrift\protocol\TBinaryProtocol.py	/^  def writeI64(self, i64):$/;"	m	class:TBinaryProtocol
writeI64	.\thrift\protocol\TProtocol.py	/^  def writeI64(self, i64):$/;"	m	class:TProtocolBase
writeI64	.\thrift\protocol\fastbinary.c	/^static void writeI64(PyObject* outbuf, int64_t val) {$/;"	f	file:
writeListBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def writeListBegin(self, etype, size):$/;"	m	class:TBinaryProtocol
writeListBegin	.\thrift\protocol\TProtocol.py	/^  def writeListBegin(self, etype, size):$/;"	m	class:TProtocolBase
writeListEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def writeListEnd(self):$/;"	m	class:TBinaryProtocol
writeListEnd	.\thrift\protocol\TProtocol.py	/^  def writeListEnd(self):$/;"	m	class:TProtocolBase
writeMapBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def writeMapBegin(self, ktype, vtype, size):$/;"	m	class:TBinaryProtocol
writeMapBegin	.\thrift\protocol\TProtocol.py	/^  def writeMapBegin(self, ktype, vtype, size):$/;"	m	class:TProtocolBase
writeMapEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def writeMapEnd(self):$/;"	m	class:TBinaryProtocol
writeMapEnd	.\thrift\protocol\TProtocol.py	/^  def writeMapEnd(self):$/;"	m	class:TProtocolBase
writeMessageBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def writeMessageBegin(self, name, type, seqid):$/;"	m	class:TBinaryProtocol
writeMessageBegin	.\thrift\protocol\TProtocol.py	/^  def writeMessageBegin(self, name, type, seqid):$/;"	m	class:TProtocolBase
writeMessageEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def writeMessageEnd(self):$/;"	m	class:TBinaryProtocol
writeMessageEnd	.\thrift\protocol\TProtocol.py	/^  def writeMessageEnd(self):$/;"	m	class:TProtocolBase
writeSetBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def writeSetBegin(self, etype, size):$/;"	m	class:TBinaryProtocol
writeSetBegin	.\thrift\protocol\TProtocol.py	/^  def writeSetBegin(self, etype, size):$/;"	m	class:TProtocolBase
writeSetEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def writeSetEnd(self):$/;"	m	class:TBinaryProtocol
writeSetEnd	.\thrift\protocol\TProtocol.py	/^  def writeSetEnd(self):$/;"	m	class:TProtocolBase
writeString	.\thrift\protocol\TBinaryProtocol.py	/^  def writeString(self, str):$/;"	m	class:TBinaryProtocol
writeString	.\thrift\protocol\TProtocol.py	/^  def writeString(self, str):$/;"	m	class:TProtocolBase
writeStructBegin	.\thrift\protocol\TBinaryProtocol.py	/^  def writeStructBegin(self, name):$/;"	m	class:TBinaryProtocol
writeStructBegin	.\thrift\protocol\TProtocol.py	/^  def writeStructBegin(self, name):$/;"	m	class:TProtocolBase
writeStructEnd	.\thrift\protocol\TBinaryProtocol.py	/^  def writeStructEnd(self):$/;"	m	class:TBinaryProtocol
writeStructEnd	.\thrift\protocol\TProtocol.py	/^  def writeStructEnd(self):$/;"	m	class:TProtocolBase
